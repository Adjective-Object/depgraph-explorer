{"version":3,"sources":["reducers/bundleDataReducer.ts","grammar/isCompilationError.ts","grammar/grammar.ts","grammar/grammarDefinition.ts","reducers/queryReducer.ts","reducers/graphOptionsReducer.ts","reducers/appUIReducer.ts","reducers/tutorialReducer.ts","reducers/rootReducer.ts","store.ts","actions/setFilterText.ts","components/QueryEditor/QueryEditor.tsx","utils/isQueryResultError.ts","hooks/useToggle.tsx","components/ToggleArrow/ToggleArrow.tsx","components/GraphView/VisGraph.tsx","components/GraphView/GraphView.tsx","components/QueryEditor/QuerySidebar.tsx","components/QueryEditor/QueryExamples.tsx","components/QueryEditor/QueryTutorial.tsx","actions/setGraphOptions.ts","components/GraphOptionsEditor/GraphOptionsEditor.tsx","utils/formatByteSize.ts","components/GraphView/BundleSizeSummaryTable.tsx","utils/colors.ts","actions/setBundleSource.ts","components/BundleLoaderView/BundleLoaderView.tsx","actions/setBundleBlobs.ts","actions/setAppUIState.ts","App.tsx","observer/postToWorkerDebouncedOnQueryChange.ts","observer/setQueryParametersOnStateChange.ts","observer/loadBundleOnSourceSet.tsx","actions/setTutorials.ts","defaultTutorials.ts","index.tsx","actions/setQueryResult.ts","actions/markBundleDataLoadError.ts","actions/markBundleDataInitialized.ts","actions/setQueryError.ts","actions/setBundleMultipleSources.ts","worker.ts"],"names":["bundleDataReducer","produce","data","arguments","length","undefined","initializationState","type","bundleSource","action","bundleSourceUrl","sourceUrl","prUrl","prBundleUrl","baselineUrl","baselineBundleUrl","prBlob","baselineBlob","errorMessage","isCompilationError","v","filterGrammar","ohm","grammar","semantics","createSemantics","addOperation","Exp","e","getQueryTree","AndExp","left","_space1","_op","_space2","right","OrExp","PrimExp","ParenExp","_lparen","inner","_rparn","IncludedByExp","_includeToken","target","IncludesExp","InterpolateExp","_interpolateToken","innerExpression","innerQuery","NotExp","pathLiteral","_quoteOpen","body","_quoteClose","caseSensitiveToken","caseSensitive","sourceString","fileName","specialCaseLiteral","specialToken","literalType","toUpperCase","Error","concat","queryReducer","currentFilterText","compilationResult","lastSucessfulCompilation","queryResult","newFilter","input","match","console","log","succeeded","query","message","parseFilterStringToQuery","JSON","stringify","forQuery","resultingGraph","summary","graphOptionsReducer","store","isHierarchical","shouldStabilize","shouldShowReasonEdges","Object","objectSpread","options","appUIReducer","isLeftSidebarOpen","isRightSidebarOpen","tutorialReducer","newTutorials","rootReducer","combineReducers","bundleData","graphOptions","appUIState","tutorials","createStore","dispatch","setFilterText","CompilationError","_ref","react","className","QueryPermalink","text","useSelector","location","window","protocol","host","pathname","encodeURIComponent","href","QueryEditor","_useSelector2","writeOnChange","React","value","onChange","QueryEditor_QueryPermalink","QueryEditor_CompilationError","isQueryError","r","isQuerySuccess","useToggle","initialValue","_React$useState","_React$useState2","slicedToArray","isClosed","setIsClosed","toggleIsClosed","ToggleArrow","onClick","classNames","VisGraphLoadBar","percent","style","width","VisGraph","_ref2","graphData","containerRef","configContainerRef","_useSelector","loadingPercent","setLoadingPercent","_React$useState3","_React$useState4","isLoaded","setIsLoaded","_useToggle","_useToggle2","isConfigOpen","setIsConfigOpen","current","numNodesAndEdges","nodes","edges","updateInterval","Math","min","ceil","configure","enabled","showButton","container","physics","stabilization","layout","randomSeed","improvedLayout","hierarchical","sortMethod","shape","shapeProperties","borderRadius","arrows","network","vis","on","params","iterations","total","destroy","ref","components_ToggleArrow_ToggleArrow","VisGraph-open","VisGraph_VisGraphLoadBar","PendingInitialLoad","InitialLoadFailed","errVis","GraphViewPending","GraphViewEmpty","QueryErrorMessage","GraphViewTooLarge","_ref3","limit","size","showAnywayCallback","GraphView","isPending","numNodes","Number","showAnyway","setShowAnyway","onShowAnyway","resolvedData","reasonChildrenEdges","dependencyEdges","GraphView_PendingInitialLoad","GraphView_InitialLoadFailed","GraphView_GraphViewPending","GraphView_GraphViewTooLarge","GraphView_QueryErrorMessage","GraphView_GraphViewEmpty","components_GraphView_VisGraph","QuerySidebar","children","QueryExamplesExample","exampleName","exampleBody","setFilterTextCallback","QueryExamplesInner","map","example","QueryExamples_QueryExamplesExample","assign","key","QueryExamples","QueryExamples_QueryExamplesInner","QueryTutorialOperatorList","QueryTutorial","QueryTutorial_QueryTutorialOperatorList","setGraphOptions","GraphOptionsEditor","setIsHierarchicalFromCheckbox","currentTarget","checked","setShouldStabilizeFromCheckbox","setShouldShowReasonEdgesFromCheckbox","name","formatByteSize","unitIndex","floor","num","pow","toString","toFixed","styleForDeltaCell","x","max","backgroundColor","replace","abs","BundleSizeSummaryTableRow","numFilesAfter","numFilesDelta","formatCountChange","totalBytesAfter","totalBytesDelta","formatByteSizeChange","BundleSizeSummaryTable","BundleSizeSummaryTable_BundleSizeSummaryTableRow","entries","packages","sort","size1","size2","_ref6","_ref7","_ref10","_ref11","_ref14","_ref15","setBundleSource","FileLoaderView","fileLoader","accept","isLoading","fileContent","loadError","useFileLoader","setIsLoading","setFileContent","_React$useState5","_React$useState6","setLoadError","files","fileReader","FileReader","readAsText","onload","result","onerror","error","BundleLoaderView","baseline","pullRequest","isUninitialized","useDemoData","BundleLoaderView_FileLoaderView","setAppUIState","App","isLeftOpen","isRightOpen","hasBundleSource","toggleLeftSidebar","useCallback","toggleRightSidebar","react_default","a","createElement","Fragment","components_GraphView_BundleSizeSummaryTable","components_GraphView_GraphView","components_QueryEditor_QuerySidebar","components_QueryEditor_QueryEditor","components_GraphOptionsEditor_GraphOptionsEditor","components_QueryEditor_QueryExamples","components_QueryEditor_QueryTutorial","components_BundleLoaderView_BundleLoaderView","previousLastSucessfulCompilation","subscribe","currentCompilation","getState","debouncedPostMessage","debounce","appWorker","postMessage","lastQueryParams","URLSearchParams","search","currentParams","set","source","getQueryParams","newLocation","history","pushState","document","title","hasPosted","payloadUrl","baselineString","prString","setTutorials","defaultTutorials","__webpack_require__","d","__webpack_exports__","AppWorker","onmessage","messageData","compResult","setQueryError","urlParams","initialQueryString","get","has","innerWidth","bundleDataSingleUrl","bundleDataPrUrl","bundleDataBaselineUrl","initStoreMessage","fetch","then","json","catch","rootElement","getElementById","ReactDOM","es","src_App_0","module","exports","Worker","p"],"mappings":"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","file":"static/js/main.11e5f494.chunk.js","sourcesContent":["import { BundleDataState, AppAction } from \"./schema\";\nimport produce from \"immer\";\nexport const bundleDataReducer = produce(\n  (\n    data: BundleDataState = {\n      initializationState: { type: \"UNINITIALIZED\" },\n      bundleSource: null\n    },\n    action: AppAction\n  ): BundleDataState => {\n    switch (action.type) {\n      case \"SET_BUNDLE_DATA_SOURCE\":\n        data.bundleSource = {\n          type: \"SINGLE_URL\",\n          bundleSourceUrl: action.sourceUrl\n        };\n        data.initializationState = {\n          type: \"INITIALIZING\"\n        };\n        return data;\n      case \"SET_BUNDLE_DATA_MULTIPLE_SOURCES\":\n        data.bundleSource = {\n          type: \"MULTIPLE_URLS\",\n          prUrl: action.prBundleUrl,\n          baselineUrl: action.baselineBundleUrl\n        };\n        data.initializationState = {\n          type: \"INITIALIZING\"\n        };\n        return data;\n      case \"SET_BUNDLE_DATA_BLOBS\":\n        data.bundleSource = {\n          type: \"MULTIPLE_BLOBS\",\n          prBlob: action.prBlob,\n          baselineBlob: action.baselineBlob\n        };\n        data.initializationState = {\n          type: \"INITIALIZING\"\n        };\n        return data;\n      case \"MARK_BUNDLE_DATA_ERROR\":\n        data.initializationState = {\n          type: \"INITIALIZATION_FAILURE\",\n          errorMessage: action.errorMessage\n        };\n        return data;\n      case \"MARK_BUNDLE_DATA_INITIALIZED\":\n        data.initializationState = { type: \"INITIALIZED\" };\n        return data;\n      default:\n        return data;\n    }\n  }\n);\n","import { CompilationError, CompilationSuccess } from \"./compilationTypes\";\n\nexport const isCompilationError = (\n  v: CompilationError | CompilationSuccess | null\n): v is CompilationError => {\n  return v !== null && v.type === \"CompilationError\";\n};\n","import ohm from \"ohm-js\";\nimport { Query } from \"../utils/Query\";\nimport { CompilationResult } from \"./compilationTypes\";\nimport { filterGrammarText } from \"./grammarDefinition\";\n\nconst filterGrammar = ohm.grammar(filterGrammarText);\n\nconst semantics = filterGrammar.createSemantics().addOperation(\"getQueryTree\", {\n  Exp: (e: any): Query => {\n    return e.getQueryTree();\n  },\n  AndExp: (\n    left: any,\n    _space1: any,\n    _op: any,\n    _space2: any,\n    right: any\n  ): Query => {\n    return {\n      type: \"AND\",\n      left: left.getQueryTree(),\n      right: right.getQueryTree()\n    };\n  },\n  OrExp: (\n    left: any,\n    _space1: any,\n    _op: any,\n    _space2: any,\n    right: any\n  ): Query => {\n    return {\n      type: \"OR\",\n      left: left.getQueryTree(),\n      right: right.getQueryTree()\n    };\n  },\n  PrimExp: (e: any): Query => {\n    return e.getQueryTree();\n  },\n  ParenExp: (\n    _lparen: any,\n    _space1: any,\n    inner: any,\n    _space2: any,\n    _rparn: any\n  ): Query => {\n    return inner.getQueryTree();\n  },\n  IncludedByExp: (_includeToken: any, _space1: any, e: any): Query => {\n    return {\n      type: \"INCLUDEDBY\",\n      target: e.getQueryTree()\n    };\n  },\n  IncludesExp: (_includeToken: any, _space1: any, e: any): Query => {\n    return {\n      type: \"INCLUDES\",\n      target: e.getQueryTree()\n    };\n  },\n  InterpolateExp: (_interpolateToken: any, innerExpression: any): Query => {\n    return {\n      type: \"INTERPOLATE\",\n      innerQuery: innerExpression.getQueryTree()\n    };\n  },\n  NotExp: (_interpolateToken: any, innerExpression: any): Query => {\n    return {\n      type: \"NOT\",\n      innerQuery: innerExpression.getQueryTree()\n    };\n  },\n  pathLiteral: (\n    _quoteOpen: any,\n    body: any,\n    _quoteClose: any,\n    caseSensitiveToken: any\n  ): Query => {\n    return {\n      type: \"FILENAME\",\n      caseSensitive: caseSensitiveToken.sourceString === \"!\",\n      fileName: body.sourceString\n    };\n  },\n  specialCaseLiteral: (specialToken: any): Query => {\n    const literalType: string = specialToken.sourceString.toUpperCase();\n    if (\n      literalType !== \"ADDED\" &&\n      literalType !== \"CHANGED\" &&\n      literalType !== \"REMOVED\"\n    ) {\n      throw new Error(\n        `specialCaseLiteral had token \"${literalType}\", not one of ADDED/CHANGED/REMOVED`\n      );\n    }\n    return {\n      type: literalType\n    };\n  }\n});\n\nexport const parseFilterStringToQuery = (input: string): CompilationResult => {\n  const match = filterGrammar.match(input);\n  console.log(match);\n  console.log(match.succeeded() && semantics(match));\n  return match.succeeded()\n    ? {\n        type: \"CompilationSuccess\",\n        query: semantics(match).getQueryTree()\n      }\n    : {\n        type: \"CompilationError\",\n        message: match.message || \"\"\n      };\n};\n","export const filterGrammarText = `\nBundleQuery {\n  Exp\n    = AndExp | OrExp | PrimExp\n\n  AndExp\n    = PrimExp _ (\"&\"|\"&&\") _ PrimExp\n\n  OrExp\n    = PrimExp _ (\"|\"|\"||\") _ PrimExp\n\n  PrimExp\n    = NotExp | InterpolateExp | IncludesExp | IncludedByExp | pathLiteral | specialCaseLiteral | ParenExp\n\n  ParenExp = \"(\" _ Exp _ \")\"\n\n  InterpolateExp\n    = \"interpolate\" ParenExp\n\n  NotExp\n    = \"not\" ParenExp\n\n  IncludedByExp\n    = (\"included-by\"|\"included_by\"|\"includedby\"|\"includedBy\") _ (pathLiteral | specialCaseLiteral | ParenExp)\n\n  IncludesExp\n    = (\"includes\") _ Exp\n\n  pathLiteral\n    = (\"'\" pathLiteralInternal \"'\" \"!\"? )\n    | (\"\\\\\"\" pathLiteralInternal \"\\\\\"\" \"!\"? )\n\n  pathLiteralInternal\n    = (\" \"|\"@\"|alnum|\"\\\\\\\\\"|\"/\"|\".\"|\":\"|\"*\"|\"-\"|\"_\")*\n    \n  specialCaseLiteral\n    = \"removed\" | \"added\" | \"changed\"\n\n    _ = space*\n}\n`;\n","import { QueryState, AppAction } from \"./schema\";\nimport { produce } from \"immer\";\nimport { isCompilationError } from \"../grammar/isCompilationError\";\nimport { parseFilterStringToQuery } from \"../grammar/grammar\";\n\nexport const queryReducer = produce(\n  (\n    data: QueryState = {\n      currentFilterText: \"\",\n      compilationResult: null,\n      lastSucessfulCompilation: null,\n      queryResult: null\n    },\n    action: AppAction\n  ): QueryState => {\n    switch (action.type) {\n      case \"SET_FILTER_TEXT\":\n        data.currentFilterText = action.newFilter;\n        data.compilationResult = parseFilterStringToQuery(action.newFilter);\n        console.log(data.compilationResult);\n        if (\n          // Only commit update if the actual result is different deeply\n          !isCompilationError(data.compilationResult) &&\n          JSON.stringify(data.compilationResult) !==\n            JSON.stringify(data.lastSucessfulCompilation)\n        ) {\n          console.log(\"updating last sucessful compilation\");\n          data.lastSucessfulCompilation = data.compilationResult;\n          data.queryResult = null;\n        }\n        break;\n      case \"SET_QUERY_RESULT\":\n        if (\n          data.lastSucessfulCompilation !== null &&\n          JSON.stringify(action.forQuery) !==\n            JSON.stringify(data.lastSucessfulCompilation.query)\n        ) {\n          console.log(\n            \"ignoring query result because the last sucessful compilation does not match the query's target\"\n          );\n          return data;\n        }\n        data.queryResult = {\n          type: \"QUERY_SUCCESS\",\n          data: action.resultingGraph,\n          summary: action.summary\n        };\n        break;\n      case \"SET_QUERY_ERROR\":\n        if (\n          data.lastSucessfulCompilation !== null &&\n          JSON.stringify(action.forQuery) ===\n            JSON.stringify(data.lastSucessfulCompilation.query)\n        ) {\n          data.queryResult = {\n            type: \"QUERY_ERROR\",\n            errorMessage: action.errorMessage\n          };\n        }\n        break;\n      default:\n        return data;\n    }\n    return data;\n  }\n);\n","import { AppAction, GraphViewOptions } from \"./schema\";\nimport { produce } from \"immer\";\n\nexport const graphOptionsReducer = produce(\n  (\n    store: GraphViewOptions = {\n      isHierarchical: false,\n      shouldStabilize: false,\n      shouldShowReasonEdges: true\n    },\n    action: AppAction\n  ): GraphViewOptions => {\n    switch (action.type) {\n      case \"SET_GRAPH_OPTIONS\":\n        return { ...store, ...action.options };\n      default:\n        return store;\n    }\n  }\n);\n","import { AppAction, AppUIState } from \"./schema\";\nimport { produce } from \"immer\";\n\nexport const appUIReducer = produce(\n  (\n    store: AppUIState = {\n      isLeftSidebarOpen: false,\n      isRightSidebarOpen: false\n    },\n    action: AppAction\n  ): AppUIState => {\n    switch (action.type) {\n      case \"SET_APP_UI\":\n        return { ...store, ...action.options };\n      default:\n        return store;\n    }\n  }\n);\n","import { Tutorial, AppAction } from \"./schema\";\nimport { produce } from \"immer\";\n\nexport const tutorialReducer = produce(\n  (data: Tutorial[] = [], action: AppAction): Tutorial[] => {\n    switch (action.type) {\n      case \"SET_TUTORIALS\":\n        return action.newTutorials;\n      default:\n        return data;\n    }\n  }\n);\n","import { combineReducers } from \"redux\";\nimport { bundleDataReducer } from \"./bundleDataReducer\";\nimport { queryReducer } from \"./queryReducer\";\nimport { RootStore, AppAction } from \"./schema\";\nimport { graphOptionsReducer } from \"./graphOptionsReducer\";\nimport { appUIReducer } from \"./appUIReducer\";\nimport { tutorialReducer } from \"./tutorialReducer\";\n\nexport const rootReducer = combineReducers<RootStore, AppAction>({\n  bundleData: bundleDataReducer,\n  query: queryReducer,\n  graphOptions: graphOptionsReducer,\n  appUIState: appUIReducer,\n  tutorials: tutorialReducer\n});\n","import { createStore } from \"redux\";\nimport { rootReducer } from \"./reducers/rootReducer\";\nexport const store = createStore(rootReducer);\nexport const dispatch = store.dispatch;\n","import { SetFilterTextAction } from \"../reducers/schema\";\nimport { dispatch } from \"../store\";\n\nexport const setFilterText = (newFilter: string): SetFilterTextAction =>\n  dispatch({\n    type: \"SET_FILTER_TEXT\",\n    newFilter\n  });\n","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootStore } from \"../../reducers/schema\";\nimport { isCompilationError } from \"../../grammar/isCompilationError\";\nimport \"./QueryEditor.css\";\nimport { setFilterText } from \"../../actions/setFilterText\";\n\nconst CompilationError = ({ message }: { message: string }) => (\n  <aside className=\"CompilationError-aside\">{message}</aside>\n);\n\nconst QueryPermalink = () => {\n  const { text } = useSelector((store: RootStore) => ({\n    text: store.query.currentFilterText\n  }));\n\n  const location =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    \"?q=\" +\n    encodeURIComponent(text);\n\n  return (\n    <a className=\"QueryEditor-permalink\" href={location}>\n      permalink\n    </a>\n  );\n};\n\nconst QueryEditor = () => {\n  const { text, compilationResult } = useSelector((store: RootStore) => ({\n    text: store.query.currentFilterText,\n    compilationResult: store.query.compilationResult\n  }));\n\n  const writeOnChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      setFilterText(e.target.value);\n    },\n    []\n  );\n\n  return (\n    <>\n      <textarea\n        className=\"QueryEditor-body\"\n        value={text}\n        onChange={writeOnChange}\n      />\n      {<QueryPermalink />}\n      {isCompilationError(compilationResult) ? (\n        <CompilationError message={compilationResult.message} />\n      ) : null}\n    </>\n  );\n};\n\nexport default QueryEditor;\n","import { QuerySuccess, QueryError } from \"../reducers/schema\";\n\nexport const isQueryError = (\n  r: QuerySuccess | QueryError | null\n): r is QueryError => !!r && r.type === \"QUERY_ERROR\";\n\nexport const isQuerySuccess = (\n  r: QuerySuccess | QueryError | null\n): r is QuerySuccess => !!r && r.type === \"QUERY_SUCCESS\";\n","import * as React from \"react\";\nconst useToggle = (initialValue: boolean = false): [boolean, () => void] => {\n  const [isClosed, setIsClosed] = React.useState(initialValue);\n  const toggleIsClosed = React.useCallback(() => {\n    setIsClosed(!isClosed);\n  }, [isClosed]);\n  return [isClosed, toggleIsClosed];\n};\n\nexport default useToggle;\n","import * as React from \"react\";\nimport \"./ToggleArrow.css\";\nimport { default as classNames } from \"classnames\";\n\ntype ArgsOf<T> = T extends (...args: (infer A)[]) => any ? A : never;\n\nconst ToggleArrow = ({\n  isClosed,\n  onClick,\n  className\n}: {\n  isClosed: boolean;\n  onClick?: () => void;\n  className?: ArgsOf<typeof classNames>;\n}) => (\n  <button className={classNames(\"ToggleArrow\", className)} onClick={onClick}>\n    {isClosed ? \"▲\" : \"▼\"}\n  </button>\n);\nexport default ToggleArrow;\n","import * as React from \"react\";\nimport \"./VisGraph.css\";\nimport * as vis from \"vis\";\nimport { useSelector } from \"react-redux\";\nimport { RootStore } from \"../../reducers/schema\";\nimport classNames from \"classnames\";\nimport useToggle from \"../../hooks/useToggle\";\nimport ToggleArrow from \"../ToggleArrow/ToggleArrow\";\n\nconst VisGraphLoadBar = ({ percent }: { percent: number }) => {\n  return (\n    <section className=\"VisGraph-loader\">\n      Stabilizing..\n      <section className=\"VisGraph-loader-bar-wrapper\">\n        <span\n          className=\"VisGraph-loader-bar\"\n          style={{ width: `${percent}%` }}\n        />\n      </section>\n    </section>\n  );\n};\nexport const VisGraph = ({ graphData }: { graphData: vis.Data | null }) => {\n  const containerRef = React.useRef<HTMLElement | null>(null);\n  const configContainerRef = React.useRef<HTMLElement | null>(null);\n  const { isHierarchical, shouldStabilize } = useSelector(\n    (store: RootStore) => store.graphOptions\n  );\n  const [loadingPercent, setLoadingPercent] = React.useState(0);\n  const [isLoaded, setIsLoaded] = React.useState(!shouldStabilize);\n  const [isConfigOpen, setIsConfigOpen] = useToggle(false);\n\n  React.useEffect(() => {\n    if (graphData == null || containerRef.current == null) {\n      return;\n    }\n\n    const numNodesAndEdges =\n      ((graphData.nodes && graphData.nodes.length) || 0) +\n      ((graphData.edges && graphData.edges.length) || 0);\n    const updateInterval = Math.min(50, Math.ceil(500 / numNodesAndEdges));\n    console.log(\"Stabilization updateInterval\", updateInterval);\n\n    const options = {\n      configure: {\n        enabled: true,\n        showButton: true,\n        container: configContainerRef.current\n      },\n      physics: {\n        stabilization: {\n          enabled: shouldStabilize,\n          updateInterval\n        }\n      },\n      layout: {\n        randomSeed: 191006,\n        improvedLayout: false,\n        hierarchical: {\n          enabled: isHierarchical,\n          sortMethod: \"directed\"\n        }\n      },\n      nodes: {\n        shape: \"box\",\n        shapeProperties: {\n          borderRadius: 1\n        }\n      },\n      edges: {\n        arrows: \"to\"\n      }\n    };\n    console.log(\"mount vis network\", containerRef.current, options);\n    console.log(\"nodes:\", graphData.nodes && graphData.nodes.length);\n    console.log(\"edges:\", graphData.edges && graphData.edges.length);\n\n    const network = new vis.Network(containerRef.current, graphData, options);\n\n    if (shouldStabilize) {\n      setIsLoaded(false);\n      network.on(\"stabilizationProgress\", params => {\n        const percent = (params.iterations / params.total) * 100;\n        setLoadingPercent(percent);\n      });\n      network.on(\"stabilizationIterationsDone\", () => {\n        setIsLoaded(true);\n      });\n    }\n\n    return () => {\n      network.destroy();\n    };\n  }, [graphData, isHierarchical, containerRef, shouldStabilize]);\n\n  return (\n    <>\n      <section className=\"VisGraph-vis-graph\" ref={containerRef} />\n      <button className=\"VisGraph-config-toggle\" onClick={setIsConfigOpen}>\n        graph config\n        <ToggleArrow isClosed={!isConfigOpen} />\n      </button>\n      <section\n        className={classNames(\"VisGraph-config-container\", {\n          \"VisGraph-open\": isConfigOpen\n        })}\n        ref={configContainerRef}\n      />\n      {isLoaded || !shouldStabilize ? null : (\n        <VisGraphLoadBar percent={loadingPercent} />\n      )}\n    </>\n  );\n};\n\nexport default VisGraph;\n","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootStore, InitializedBundleDataState } from \"../../reducers/schema\";\nimport \"./GraphView.css\";\nimport { isQueryError, isQuerySuccess } from \"../../utils/isQueryResultError\";\nimport VisGraph from \"./VisGraph\";\n\nconst PendingInitialLoad = () => (\n  <section className=\"GraphView-initial-load\">\n    Fetching and parsing bundle data..\n  </section>\n);\n\nconst InitialLoadFailed = ({\n  bundleData,\n  errorMessage\n}: {\n  bundleData: InitializedBundleDataState;\n  errorMessage: string;\n}) => {\n  let errVis = (() => {\n    const bundleSource = bundleData.bundleSource;\n    switch (bundleSource.type) {\n      case \"SINGLE_URL\":\n        return (\n          <p>\n            Url: <code>\"{bundleSource.bundleSourceUrl}\"</code>\n          </p>\n        );\n      case \"MULTIPLE_URLS\":\n        return (\n          <p>\n            Bundle url: <code>\"{bundleSource.baselineUrl}\"</code> <br></br>\n            PR url: <code>\"{bundleSource.prUrl}\"</code>\n          </p>\n        );\n      case \"MULTIPLE_BLOBS\":\n        return <p>Local blobs.</p>;\n    }\n  })();\n  return (\n    <section className=\"GraphView-error\">\n      <h2>Error Loading bundle</h2>\n      {errVis}\n      <pre>{errorMessage}</pre>\n    </section>\n  );\n};\n\nconst GraphViewPending = () => (\n  <section className=\"GraphView-pending\">Running Query..</section>\n);\n\nconst GraphViewEmpty = () => (\n  <section className=\"GraphView-empty\">No Results</section>\n);\n\nconst QueryErrorMessage = ({ message }: { message: string }) => (\n  <section className=\"GraphView-error\">\n    <h2>Error while running query</h2>\n    <pre>{message}</pre>\n  </section>\n);\n\nconst GraphViewTooLarge = ({\n  limit,\n  size,\n  showAnywayCallback\n}: {\n  limit: number;\n  size: number;\n  showAnywayCallback: () => void;\n}) => (\n  <section className=\"Graphview-over-limit\">\n    <p>\n      {size} nodes is greater than default maximum of {limit} nodes.\n    </p>\n    <button\n      className=\"Graphview-show-anyway-button\"\n      onClick={showAnywayCallback}\n    >\n      Show Anyway\n    </button>\n  </section>\n);\n\nconst STATIC_LIMIT = 1000;\n\nconst GraphView = () => {\n  const {\n    bundleData,\n    isPending,\n    numNodes,\n    shouldShowReasonEdges,\n    queryResult\n  } = useSelector((store: RootStore) => ({\n    bundleData: store.bundleData,\n    isPending:\n      store.query.queryResult === null &&\n      store.query.lastSucessfulCompilation !== null,\n    numNodes: Number(\n      isQuerySuccess(store.query.queryResult) &&\n        store.query.queryResult.data.nodes &&\n        store.query.queryResult.data.nodes.length\n    ),\n    shouldShowReasonEdges: store.graphOptions.shouldShowReasonEdges,\n    queryResult: store.query.queryResult\n  }));\n\n  const [showAnyway, setShowAnyway] = React.useState(false);\n  const onShowAnyway = React.useCallback(() => {\n    setShowAnyway(true);\n  }, []);\n  React.useEffect(() => {\n    if (showAnyway && isPending) {\n      setShowAnyway(false);\n    }\n  }, [showAnyway, isPending]);\n\n  const resolvedData = React.useMemo(() => {\n    if (!queryResult || isQueryError(queryResult)) {\n      return null;\n    }\n\n    return {\n      nodes: queryResult.data.nodes,\n      edges: shouldShowReasonEdges\n        ? queryResult.data.reasonChildrenEdges\n        : queryResult.data.dependencyEdges\n    };\n  }, [queryResult, shouldShowReasonEdges]);\n\n  return (\n    <section className=\"GraphView-host\">\n      {bundleData.initializationState.type === \"UNINITIALIZED\" ? (\n        <PendingInitialLoad />\n      ) : bundleData.initializationState.type === \"INITIALIZATION_FAILURE\" ? (\n        <InitialLoadFailed\n          bundleData={bundleData as InitializedBundleDataState}\n          errorMessage={bundleData.initializationState.errorMessage}\n        />\n      ) : isPending || queryResult == null ? (\n        <GraphViewPending />\n      ) : !showAnyway && numNodes > STATIC_LIMIT ? (\n        <GraphViewTooLarge\n          limit={STATIC_LIMIT}\n          size={numNodes}\n          showAnywayCallback={onShowAnyway}\n        />\n      ) : isQueryError(queryResult) ? (\n        <QueryErrorMessage message={queryResult.errorMessage} />\n      ) : numNodes === 0 ? (\n        <GraphViewEmpty />\n      ) : (\n        <VisGraph graphData={resolvedData} />\n      )}\n    </section>\n  );\n};\n\nexport default GraphView;\n","import * as React from \"react\";\nimport \"./QuerySidebar.css\";\n\nconst QuerySidebar = ({\n  children\n}: {\n  children: React.ReactElement | React.ReactElement[];\n}) => <section className=\"QuerySidebar-host\">{children}</section>;\n\nexport default QuerySidebar;\n","import * as React from \"react\";\nimport { useSelector } from 'react-redux';\nimport \"./QueryExamples.css\";\nimport { setFilterText } from \"../../actions/setFilterText\";\nimport useToggle from \"../../hooks/useToggle\";\nimport ToggleArrow from \"../ToggleArrow/ToggleArrow\";\nimport { RootStore } from \"../../reducers/schema\";\n\nconst QueryExamplesExample = ({\n  exampleName,\n  exampleBody\n}: {\n  exampleName: string;\n  exampleBody: string;\n}) => {\n  const setFilterTextCallback = React.useCallback(() => {\n    setFilterText(exampleBody);\n  }, [exampleBody]);\n\n  return (\n    <li className=\"QueryExamples-example\" onClick={setFilterTextCallback}>\n      {exampleName}\n      {/* <td>{exampleBody}</td> */}\n    </li>\n  );\n};\n\nconst QueryExamplesInner = () => {\n  const tutorials = useSelector((store: RootStore) => \n    store.tutorials\n  );\n  return (\n    <>\n      <p className=\"QueryExamples-helptext\">\n        Click an example to load it in the editor.\n      </p>\n      {tutorials.map(example => (\n        <QueryExamplesExample {...example} key={example.exampleName} />\n      ))}\n    </>\n  );\n};\n\nconst QueryExamples = () => {\n  const [isClosed, toggleIsClosed] = useToggle();\n  return (\n    <ul className=\"QueryExamples-wrapper\">\n      <h2 className=\"QueryExamples-header\" onClick={toggleIsClosed}>\n        Examples: <ToggleArrow isClosed={isClosed} />\n      </h2>\n      {isClosed ? null : <QueryExamplesInner />}\n    </ul>\n  );\n};\n\nexport default QueryExamples;\n","import * as React from \"react\";\nimport \"./QueryTutorial.css\";\nimport useToggle from \"../../hooks/useToggle\";\nimport ToggleArrow from \"../ToggleArrow/ToggleArrow\";\n\nconst QueryTutorialOperatorList = () => (\n  <ul>\n    <li className=\"QueryTutorial-operator\">\n      <span className=\"QueryTutorial-operator-text\">\"*some/filename.js\"</span>\n      <span className=\"QueryTutorial-operator-explanation\">\n        Select files where part of the path matches the text inside the quotes.\n        Case insensitive. Use '*' for a wildcard.\n      </span>\n    </li>\n    <li className=\"QueryTutorial-operator\">\n      <span className=\"QueryTutorial-operator-text\">\"some*File.css\"!</span>\n      <span className=\"QueryTutorial-operator-explanation\">\n        Case sensitive alternate of the above\n      </span>\n    </li>\n    <li className=\"QueryTutorial-operator\">\n      <span className=\"QueryTutorial-operator-text\">\n        includes {\"<subquery>\"}\n      </span>\n      <span className=\"QueryTutorial-operator-explanation\">\n        Select all files which directly or indirectly include any target of the\n        subquery\n      </span>\n    </li>\n    <li className=\"QueryTutorial-operator\">\n      <span className=\"QueryTutorial-operator-text\">\n        included_by {\"<subquery>\"}\n      </span>\n      <span className=\"QueryTutorial-operator-explanation\">\n        Select all files which are directly or indirectly included by any target\n        of the subquery\n      </span>\n    </li>\n    <li className=\"QueryTutorial-operator\">\n      <span className=\"QueryTutorial-operator-text\">\n        {\"<A>\"} &amp; {\"<B>\"}\n      </span>\n      <span className=\"QueryTutorial-operator-explanation\">\n        Select all files in selected by both A and B\n      </span>\n    </li>\n    <li className=\"QueryTutorial-operator\">\n      <span className=\"QueryTutorial-operator-text\">\n        {\"<A>\"} | {\"<B>\"}\n      </span>\n      <span className=\"QueryTutorial-operator-explanation\">\n        Select all files in selected by either A or B\n      </span>\n    </li>\n    <li className=\"QueryTutorial-operator\">\n      <span className=\"QueryTutorial-operator-text\">removed</span>\n      <span className=\"QueryTutorial-operator-explanation\">\n        Selects all files removed by the change\n      </span>\n    </li>\n    <li className=\"QueryTutorial-operator\">\n      <span className=\"QueryTutorial-operator-text\">added</span>\n      <span className=\"QueryTutorial-operator-explanation\">\n        Selects all files added by the change\n      </span>\n    </li>\n    <li className=\"QueryTutorial-operator\">\n      <span className=\"QueryTutorial-operator-text\">changed</span>\n      <span className=\"QueryTutorial-operator-explanation\">\n        Selects all files that were added, removed, or have size differences\n      </span>\n    </li>\n    <li className=\"QueryTutorial-operator\">\n      <span className=\"QueryTutorial-operator-text\">\n        interpolate( {\"<subexpression>\"} )\n      </span>\n      <span className=\"QueryTutorial-operator-explanation\">\n        Selects nodes that form paths between nodes in the selected set.\n      </span>\n    </li>\n    <li className=\"QueryTutorial-operator\">\n      <span className=\"QueryTutorial-operator-text\">\n        ( {\"<subexpression>\"} )\n      </span>\n      <span className=\"QueryTutorial-operator-explanation\">\n        Selects the results as the subexpression\n      </span>\n    </li>\n  </ul>\n);\n\nconst QueryTutorial = () => {\n  const [isClosed, toggleIsClosed] = useToggle();\n\n  return (\n    <section className=\"QueryTutorial-body\">\n      <h2 className=\"QueryTutorial-header\" onClick={toggleIsClosed}>\n        Operators <ToggleArrow isClosed={isClosed} />\n      </h2>\n      {isClosed ? null : <QueryTutorialOperatorList />}\n    </section>\n  );\n};\n\nexport default QueryTutorial;\n","import { GraphViewOptions, SetGraphOptionsAction } from \"../reducers/schema\";\nimport { dispatch } from \"../store\";\n\nexport const setGraphOptions = (\n  options: Partial<GraphViewOptions>\n): SetGraphOptionsAction =>\n  dispatch({\n    type: \"SET_GRAPH_OPTIONS\",\n    options\n  });\n","import * as React from \"react\";\nimport \"./GraphOptionsEditor.css\";\nimport { useSelector } from \"react-redux\";\nimport { RootStore } from \"../../reducers/schema\";\nimport { setGraphOptions } from \"../../actions/setGraphOptions\";\n\nconst GraphOptionsEditor = () => {\n  const {\n    isHierarchical,\n    shouldStabilize,\n    shouldShowReasonEdges\n  } = useSelector((store: RootStore) => store.graphOptions);\n  const setIsHierarchicalFromCheckbox = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setGraphOptions({\n        isHierarchical: !!e.currentTarget.checked\n      });\n    },\n    []\n  );\n  const setShouldStabilizeFromCheckbox = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setGraphOptions({\n        shouldStabilize: !!e.currentTarget.checked\n      });\n    },\n    []\n  );\n  const setShouldShowReasonEdgesFromCheckbox = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setGraphOptions({\n        shouldShowReasonEdges: !!e.currentTarget.checked\n      });\n    },\n    []\n  );\n\n  return (\n    <section className=\"GraphViewOptions-wrapper\">\n      <h2>Options:</h2>\n      <label className=\"GraphViewOptions-label\">\n        <input\n          type=\"checkbox\"\n          name=\"isHierarchical\"\n          onChange={setIsHierarchicalFromCheckbox}\n          checked={isHierarchical}\n        />\n        Force Hierarchical Nodes (better for small graphs)\n      </label>\n      <label className=\"GraphViewOptions-label\">\n        <input\n          type=\"checkbox\"\n          name=\"shouldStabilize\"\n          onChange={setShouldStabilizeFromCheckbox}\n          checked={shouldStabilize}\n        />\n        pre-stabilize the network\n      </label>\n      <label className=\"GraphViewOptions-label\">\n        <input\n          type=\"checkbox\"\n          name=\"shouldShowReasonEdges\"\n          onChange={setShouldShowReasonEdgesFromCheckbox}\n          checked={shouldShowReasonEdges}\n        />\n        <p>\n          show reason edges (instead of module parentage). <br />\n          This visualzies actual import dependencies instead of hoisted\n          dependencies. <br />\n          <b>\n            This will not work unless you build this into your bundlestats.json\n            ahead of time. see{\" \"}\n            <a href=\"https://github.com/Adjective-Object/webpack-bundle-diff-add-reasons\">\n              webpack-bundle-diff-add-reasons\n            </a>\n          </b>\n        </p>\n      </label>\n    </section>\n  );\n};\n\nexport default GraphOptionsEditor;\n","export const formatByteSize = (size: number) => {\n  if (size === 0) {\n    return \"0\";\n  }\n  const unitIndex = Math.floor(Math.log(size) / Math.log(1024));\n  const num = size / Math.pow(1024, unitIndex);\n  return (\n    (unitIndex === 0 ? num.toString() : num.toFixed(2)) +\n    [\"B\", \"kB\", \"MB\", \"GB\", \"TB\"][unitIndex]\n  );\n};\n\nexport const formatByteSizeChange = (size: number) =>\n  size > 0 ? `+${formatByteSize(size)}` : `-${formatByteSize(Math.abs(size))}`;\n\nexport const formatCountChange = (size: number) =>\n  size > 0 ? `+${size}` : `-${Math.abs(size)}`;\n","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootStore, SizeSummary } from \"../../reducers/schema\";\nimport { isQuerySuccess } from \"../../utils/isQueryResultError\";\nimport \"./BundleSizeSummaryTable.css\";\nimport {\n  formatByteSize,\n  formatByteSizeChange,\n  formatCountChange\n} from \"../../utils/formatByteSize\";\nimport { GOOD_COLOR, BAD_COLOR } from \"../../utils/colors\";\n\nconst BAD_BASELINE = 4096;\nconst styleForDeltaCell = (x: number): React.CSSProperties => {\n  const percent = Math.max(-1, Math.min(1, x / BAD_BASELINE));\n  const targetColor = percent < 0 ? GOOD_COLOR : BAD_COLOR;\n  const color = targetColor.replace(\n    /1\\)$/,\n    Math.abs(1 - Math.pow(1 - percent, 3)).toString()\n  );\n  return {\n    backgroundColor: color\n  };\n};\n\nconst BundleSizeSummaryTableRow = ({\n  name,\n  size,\n  className\n}: {\n  name: string;\n  size: SizeSummary;\n  className?: string;\n}) => (\n  <tr className={className}>\n    <td>{name}</td>\n    <td>{size.numFilesAfter}</td>\n    <td style={styleForDeltaCell(size.numFilesDelta)}>\n      {formatCountChange(size.numFilesDelta)}\n    </td>\n    <td>{formatByteSize(size.totalBytesAfter)}</td>\n    <td style={styleForDeltaCell(size.totalBytesDelta)}>\n      {formatByteSizeChange(size.totalBytesDelta)}\n    </td>\n  </tr>\n);\n\nexport const BundleSizeSummaryTable = () => {\n  const summary = useSelector((store: RootStore) =>\n    isQuerySuccess(store.query.queryResult)\n      ? store.query.queryResult.summary\n      : null\n  );\n  return summary == null ? null : (\n    <section className=\"BundleSizeSummary-container\">\n      <table className=\"BundleSizeSummary-table\">\n        <tbody>\n          <tr className={\"BundleSizeSummary-titleRow\"}>\n            <td>Name</td>\n            <td># Files</td>\n            <td>Δ Files</td>\n            <td>Size</td>\n            <td>Δ Size</td>\n          </tr>\n          <BundleSizeSummaryTableRow\n            className=\"BundleSizeSummary-totalsRow\"\n            name={\"Total\"}\n            size={summary.total}\n          />\n          {Object.entries(summary.packages)\n            .sort(\n              (\n                [, size1]: [string, SizeSummary],\n                [, size2]: [string, SizeSummary]\n              ) => {\n                return (\n                  Math.abs(size2.totalBytesAfter) -\n                  Math.abs(size1.totalBytesAfter)\n                );\n              }\n            )\n            .sort(\n              (\n                [, size1]: [string, SizeSummary],\n                [, size2]: [string, SizeSummary]\n              ) => {\n                return (\n                  Math.abs(size2.totalBytesAfter) -\n                  Math.abs(size1.totalBytesAfter)\n                );\n              }\n            )\n            .sort(\n              (\n                [, size1]: [string, SizeSummary],\n                [, size2]: [string, SizeSummary]\n              ) => {\n                return (\n                  Math.abs(size2.totalBytesDelta) -\n                  Math.abs(size1.totalBytesDelta)\n                );\n              }\n            )\n            .map(([name, size]: [string, SizeSummary]) => (\n              <BundleSizeSummaryTableRow name={name} size={size} />\n            ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default BundleSizeSummaryTable;\n","export const BAD_COLOR = \"rgba(255, 20, 120, 1)\";\nexport const GOOD_COLOR = \"rgba(34, 170, 238, 1)\";\n","import { SetBundleDataSourceAction } from \"../reducers/schema\";\nimport { dispatch } from \"../store\";\n\nexport const setBundleSource = (sourceUrl: string): SetBundleDataSourceAction =>\n  dispatch({\n    type: \"SET_BUNDLE_DATA_SOURCE\",\n    sourceUrl\n  });\n","import * as React from \"react\";\nimport \"./BundleLoaderView.css\";\nimport { useSelector } from \"react-redux\";\nimport { RootStore } from \"../../reducers/schema\";\nimport { setBundleBlobs } from \"../../actions/setBundleBlobs\";\nimport { setBundleSource } from \"../../actions/setBundleSource\";\n\ninterface FileLoader {\n  isLoading: boolean;\n  fileContent: string | null;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  loadError: Error | null;\n}\n\nconst FileLoaderView = ({\n  fileLoader,\n  children\n}: {\n  fileLoader: FileLoader;\n  children?: React.ReactChild;\n}) => {\n  return (\n    <section className=\"BundleLoaderView-FileLoaderView\">\n      {children}\n      <input\n        type=\"file\"\n        accept=\"application/json\"\n        onChange={fileLoader.onChange}\n      />\n      {fileLoader.isLoading && (\n        <span className=\"BundleLoaderView-loading\">Loading...</span>\n      )}\n      {fileLoader.fileContent !== null && (\n        <span className=\"BundleLoaderView-loaded\">Loaded!</span>\n      )}\n      {fileLoader.loadError && (\n        <span className=\"BundleLoaderView-error\">\n          {fileLoader.loadError.toString()}\n        </span>\n      )}\n    </section>\n  );\n};\n\nconst useFileLoader = () => {\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [fileContent, setFileContent] = React.useState<string | null>(null);\n  const [loadError, setLoadError] = React.useState<Error | null>(null);\n\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const files = e.target.files as FileList;\n\n      if (!files || files.length !== 1) {\n        return;\n      }\n\n      setIsLoading(true);\n\n      const fileReader = new FileReader();\n      fileReader.readAsText(files[0]);\n      fileReader.onload = (e: ProgressEvent) => {\n        setIsLoading(false);\n        if (e.target && typeof fileReader.result === \"string\") {\n          setFileContent(fileReader.result);\n        }\n      };\n      fileReader.onerror = (e: ProgressEvent) => {\n        setIsLoading(false);\n        fileReader && setLoadError(fileReader.error);\n      };\n    },\n    []\n  );\n\n  return {\n    isLoading,\n    fileContent,\n    onChange,\n    loadError\n  };\n};\n\nconst BundleLoaderView = () => {\n  const baseline = useFileLoader();\n  const pullRequest = useFileLoader();\n\n  const isUninitialized = useSelector(\n    (store: RootStore) =>\n      store.bundleData.initializationState.type === \"UNINITIALIZED\"\n  );\n\n  React.useEffect(() => {\n    if (isUninitialized && baseline.fileContent && pullRequest.fileContent) {\n      setBundleBlobs(baseline.fileContent, pullRequest.fileContent);\n    }\n  }, [isUninitialized, baseline.fileContent, pullRequest.fileContent]);\n\n  const useDemoData = React.useCallback(() => {\n    setBundleSource(\"./demo-stats.json\");\n  }, []);\n\n  return (\n    <section className=\"BundleLoaderView-wrapper\">\n      <section className=\"BundleLoaderView-files\">\n        <FileLoaderView fileLoader={baseline}>Baseline: </FileLoaderView>\n        <FileLoaderView fileLoader={pullRequest}>Pull Request: </FileLoaderView>\n      </section>\n      <button className=\"BundleLoaderView-demoDataButton\" onClick={useDemoData}>\n        Use Demo Data\n      </button>\n    </section>\n  );\n};\n\nexport default BundleLoaderView;\n","import { SetBundleDataBlobsAction } from \"../reducers/schema\";\nimport { dispatch } from \"../store\";\n\nexport const setBundleBlobs = (\n  baselineBlob: string,\n  prBlob: string\n): SetBundleDataBlobsAction => {\n  return dispatch({\n    type: \"SET_BUNDLE_DATA_BLOBS\",\n    baselineBlob,\n    prBlob\n  });\n};\n","import { AppUIState, SetAppUIStateAction } from \"../reducers/schema\";\nimport { dispatch } from \"../store\";\n\nexport const setAppUIState = (\n  options: Partial<AppUIState>\n): SetAppUIStateAction =>\n  dispatch({\n    type: \"SET_APP_UI\",\n    options\n  });\n","import React from \"react\";\nimport QueryEditor from \"./components/QueryEditor/QueryEditor\";\nimport GraphView from \"./components/GraphView/GraphView\";\nimport QuerySidebar from \"./components/QueryEditor/QuerySidebar\";\nimport QueryExamples from \"./components/QueryEditor/QueryExamples\";\nimport QueryTutorial from \"./components/QueryEditor/QueryTutorial\";\nimport GraphOptionsEditor from \"./components/GraphOptionsEditor/GraphOptionsEditor\";\nimport BundleSizeSummaryTable from \"./components/GraphView/BundleSizeSummaryTable\";\nimport ToggleArrow from \"./components/ToggleArrow/ToggleArrow\";\nimport BundleLoaderView from \"./components/BundleLoaderView/BundleLoaderView\";\nimport \"./App.css\";\nimport { useSelector } from \"react-redux\";\nimport { RootStore } from \"./reducers/schema\";\nimport { setAppUIState } from \"./actions/setAppUIState\";\n\nconst App: React.FC = () => {\n  const { isLeftOpen, isRightOpen, hasBundleSource } = useSelector(\n    (store: RootStore) => ({\n      isLeftOpen: store.appUIState.isLeftSidebarOpen,\n      isRightOpen: store.appUIState.isRightSidebarOpen,\n      hasBundleSource:\n        store.bundleData.initializationState.type !== \"UNINITIALIZED\"\n    })\n  );\n  const toggleLeftSidebar = React.useCallback(() => {\n    setAppUIState({\n      isLeftSidebarOpen: !isLeftOpen\n    });\n  }, [isLeftOpen]);\n  const toggleRightSidebar = React.useCallback(() => {\n    setAppUIState({\n      isRightSidebarOpen: !isRightOpen\n    });\n  }, [isRightOpen]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ToggleArrow\n          className=\"App-toggle\"\n          isClosed={isLeftOpen}\n          onClick={toggleLeftSidebar}\n        />\n        <h1>Bundle Size Explorer</h1>\n        <ToggleArrow\n          className=\"App-toggle\"\n          isClosed={isRightOpen}\n          onClick={toggleRightSidebar}\n        />\n      </header>\n      <section className=\"App-body\">\n        {hasBundleSource ? (\n          <>\n            {isLeftOpen && <BundleSizeSummaryTable />}\n            <GraphView />\n            {isRightOpen && (\n              <QuerySidebar>\n                <QueryEditor />\n                <GraphOptionsEditor />\n                <QueryExamples />\n                <QueryTutorial />\n              </QuerySidebar>\n            )}\n          </>\n        ) : (\n          <BundleLoaderView />\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import { PerformQueryRequestMessage } from \"../worker/messages\";\nimport { store } from \"../store\";\nimport { CompilationSuccess } from \"../grammar/compilationTypes\";\nimport debounce from \"lodash/debounce\";\nimport { isCompilationError } from \"../grammar/isCompilationError\";\nimport { appWorker } from \"..\";\n\n/**\n * Post the message, debounced.\n */\n\nlet previousLastSucessfulCompilation: CompilationSuccess | null = null;\nstore.subscribe(() => {\n  const currentCompilation = store.getState().query.lastSucessfulCompilation;\n  if (previousLastSucessfulCompilation !== currentCompilation) {\n    previousLastSucessfulCompilation = currentCompilation;\n    if (currentCompilation && !isCompilationError(currentCompilation)) {\n      debouncedPostMessage({\n        type: \"QUERY_REQUEST\",\n        query: currentCompilation.query\n      });\n    }\n  }\n});\n\nconst debouncedPostMessage = debounce(\n  (message: PerformQueryRequestMessage) => appWorker.postMessage(message),\n  300\n);\n","import { store } from \"../store\";\nimport { RootStore } from \"../reducers/schema\";\n\nconst getQueryParams = (store: RootStore): URLSearchParams => {\n  const params: URLSearchParams = new URLSearchParams();\n  if (!store.appUIState.isLeftSidebarOpen) {\n    params.set(\"lc\", \"\");\n  }\n  if (!store.appUIState.isRightSidebarOpen) {\n    params.set(\"rc\", \"\");\n  }\n  params.set(\"q\", store.query.currentFilterText);\n  if (store.graphOptions.isHierarchical) {\n    params.set(\"hi\", \"\");\n  }\n  if (store.graphOptions.shouldStabilize) {\n    params.set(\"stab\", \"\");\n  }\n  if (store.bundleData.bundleSource) {\n    const source = store.bundleData.bundleSource;\n    switch (source.type) {\n      case \"SINGLE_URL\":\n        params.set(\"bundle\", source.bundleSourceUrl);\n        break;\n      case \"MULTIPLE_URLS\":\n        params.set(\"pr_bundle\", source.prUrl);\n        params.set(\"base_bundle\", source.baselineUrl);\n        break;\n      case \"MULTIPLE_BLOBS\":\n    }\n  }\n  params.sort();\n  return params;\n};\n\n/**\n * Post the message, debounced.\n */\n\nlet lastQueryParams: URLSearchParams = new URLSearchParams(\n  window.location.search\n);\nlastQueryParams.sort();\nstore.subscribe(() => {\n  const currentParams = getQueryParams(store.getState());\n  if (currentParams.toString() !== lastQueryParams.toString()) {\n    lastQueryParams = currentParams;\n    const newLocation =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname +\n      \"?\" +\n      currentParams\n        .toString()\n        .replace(/=&/g, \"&\")\n        .replace(/=$/g, \"\");\n    window.history.pushState(null, document.title, newLocation);\n  }\n});\n","import { store } from \"../store\";\nimport { appWorker } from \"..\";\n\nlet hasPosted = false;\n\nstore.subscribe(() => {\n  const bundleData = store.getState().bundleData;\n  if (\n    hasPosted ||\n    !bundleData.bundleSource ||\n    bundleData.initializationState.type !== \"INITIALIZING\"\n  ) {\n    return;\n  }\n\n  switch (bundleData.bundleSource.type) {\n    case \"SINGLE_URL\":\n      appWorker.postMessage({\n        type: \"INIT_STORE_FROM_URL\",\n        payloadUrl: bundleData.bundleSource.bundleSourceUrl\n      });\n      break;\n    case \"MULTIPLE_URLS\":\n      appWorker.postMessage({\n        type: \"INIT_STORE_FROM_MULTI_URL\",\n        prUrl: bundleData.bundleSource.prUrl,\n        baselineUrl: bundleData.bundleSource.baselineUrl\n      });\n      break;\n    case \"MULTIPLE_BLOBS\":\n      appWorker.postMessage({\n        type: \"INIT_STORE_FROM_BUNDLE_STATS_STRINGS\",\n        baselineString: bundleData.bundleSource.baselineBlob,\n        prString: bundleData.bundleSource.prBlob\n      });\n      break;\n  }\n  hasPosted = true;\n});\n","import { SetTutorialsAction, Tutorial } from \"../reducers/schema\";\nimport { dispatch } from \"../store\";\n\nexport const setTutorials = (newTutorials: Tutorial[]): SetTutorialsAction =>\n  dispatch({\n    type: \"SET_TUTORIALS\",\n    newTutorials\n  });\n","export const defaultTutorials = [\n  { exampleName: \"Added Files\", exampleBody: \"added\" },\n  { exampleName: \"Removed Files\", exampleBody: \"removed\" },\n  { exampleName: \"Changed Files\", exampleBody: \"changed\" },\n  { exampleName: \"Package 1\", exampleBody: \"'package1/lib'\" },\n  {\n    exampleName: \"Package 1 and Package 2\",\n    exampleBody: \"'package1/lib'\\n  | 'package2/lib' \"\n  },\n  {\n    exampleName: \"Json files in package 1\",\n    exampleBody: \"'package1/*json'\\n \"\n  },\n  {\n    exampleName: \"package1 files that include the current changes\",\n    exampleBody: \"includes changed & 'package1'\"\n  },\n  {\n    exampleName: \"packages indexes included by Package 1\",\n    exampleBody: \"(included_by '*package1*') & '*index.js*'\"\n  },\n  {\n    exampleName: \"packages included by package 1, tracing dependenices\",\n    exampleBody: \"interpolate( (included_by '*package1*') & '*index.js*' )\"\n  }\n];\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nimport App from \"./App\";\nimport {\n  InitStoreFromUrlRequestMessage,\n  WorkerToAppMessage,\n  InitStoreFromMultiUrlRequestMessage\n} from \"./worker/messages\";\nimport { markBundleDataInitialized } from \"./actions/markBundleDataInitialized\";\nimport { setQueryResult } from \"./actions/setQueryResult\";\nimport { setFilterText } from \"./actions/setFilterText\";\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport AppWorker from \"worker-loader!./worker\";\nimport { setQueryError } from \"./actions/setQueryError\";\nimport { setGraphOptions } from \"./actions/setGraphOptions\";\nimport { setAppUIState } from \"./actions/setAppUIState\";\n\nimport \"./observer/postToWorkerDebouncedOnQueryChange\";\nimport \"./observer/setQueryParametersOnStateChange\";\nimport \"./observer/loadBundleOnSourceSet\";\n\nimport { setBundleSource } from \"./actions/setBundleSource\";\nimport { setTutorials } from \"./actions/setTutorials\";\nimport { markBundleDataLoadError } from \"./actions/markBundleDataLoadError\";\nimport { defaultTutorials } from \"./defaultTutorials\";\nimport { setBundleMultipleSources } from \"./actions/setBundleMultipleSources\";\n\n//////////////////////\n// Spawn the worker //\n//////////////////////\nexport const appWorker = new AppWorker();\nappWorker.onmessage = function(e: MessageEvent): void {\n  const messageData = e.data as WorkerToAppMessage;\n  console.log(\"App: Message received from worker script\", messageData);\n  switch (messageData.type) {\n    case \"STORE_LOADED\":\n      markBundleDataInitialized();\n      // handle load / compilation message race\n      const compResult = store.getState().query.compilationResult;\n      if (compResult && compResult.type === \"CompilationSuccess\") {\n        appWorker.postMessage({\n          type: \"QUERY_REQUEST\",\n          query: compResult.query\n        });\n      }\n      break;\n    case \"STORE_LOAD_ERROR\":\n      markBundleDataLoadError(messageData.errorMessage);\n      break;\n    case \"QUERY_RESULT\":\n      setQueryResult(\n        messageData.forQuery,\n        messageData.result,\n        messageData.summary\n      );\n      break;\n    case \"QUERY_ERROR\":\n      setQueryError(messageData.forQuery, messageData.errorMessage);\n      break;\n  }\n};\n\n//////////////////////////////////\n// Initialize state from params //\n//////////////////////////////////\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst initialQueryString = urlParams.get(\"q\") || \"changed\";\nif (initialQueryString) {\n  setFilterText(initialQueryString);\n}\nsetGraphOptions({\n  isHierarchical: !!urlParams.has(\"hi\"),\n  shouldStabilize: !!urlParams.has(\"stab\")\n});\nsetAppUIState({\n  isLeftSidebarOpen: !(urlParams.has(\"lc\") || window.innerWidth < 1000),\n  isRightSidebarOpen: !urlParams.has(\"rc\")\n});\n\n// Init bundle data form URL params\nconst bundleDataSingleUrl: string | null = urlParams.get(\"bundle\");\nconst bundleDataPrUrl: string | null = urlParams.get(\"pr_bundle\");\nconst bundleDataBaselineUrl: string | null = urlParams.get(\"baseline_bundle\");\n\nif (bundleDataSingleUrl) {\n  setBundleSource(bundleDataSingleUrl);\n  const initStoreMessage: InitStoreFromUrlRequestMessage = {\n    type: \"INIT_STORE_FROM_URL\",\n    payloadUrl: bundleDataSingleUrl\n  };\n  appWorker.postMessage(initStoreMessage);\n} else if (bundleDataPrUrl && bundleDataBaselineUrl) {\n  setBundleMultipleSources(bundleDataPrUrl, bundleDataBaselineUrl);\n  const initStoreMessage: InitStoreFromMultiUrlRequestMessage = {\n    type: \"INIT_STORE_FROM_MULTI_URL\",\n    prUrl: bundleDataPrUrl,\n    baselineUrl: bundleDataBaselineUrl\n  };\n  appWorker.postMessage(initStoreMessage);\n}\n\n// fetch the tutorial\nfetch(\"./tutorial_examples.json\")\n  .then(r => r.json())\n  .then(tutorials => setTutorials(tutorials))\n  .catch(e => setTutorials(defaultTutorials));\n\n///////////////////\n// Mount the app //\n///////////////////\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n","import {\n  SetQueryResultAction,\n  BundleSizeSummary,\n  GeneratedGraphData\n} from \"../reducers/schema\";\nimport { dispatch } from \"../store\";\nimport { Query } from \"../utils/Query\";\n\nexport const setQueryResult = (\n  forQuery: Query,\n  resultingGraph: GeneratedGraphData,\n  summary: BundleSizeSummary\n): SetQueryResultAction =>\n  dispatch({\n    type: \"SET_QUERY_RESULT\",\n    forQuery,\n    resultingGraph,\n    summary\n  });\n","import { dispatch } from \"../store\";\nimport { MarkBundleDataLoadErrorAction } from \"../reducers/schema\";\n\nexport const markBundleDataLoadError = (\n  errorMessage: string\n): MarkBundleDataLoadErrorAction =>\n  dispatch({\n    type: \"MARK_BUNDLE_DATA_ERROR\",\n    errorMessage\n  });\n","import { MarkBundleDataInitializedAction } from \"../reducers/schema\";\nimport { dispatch } from \"../store\";\n\nexport const markBundleDataInitialized = (): MarkBundleDataInitializedAction =>\n  dispatch({\n    type: \"MARK_BUNDLE_DATA_INITIALIZED\"\n  });\n","import { SetQueryErrorAction } from \"../reducers/schema\";\nimport { dispatch } from \"../store\";\nimport { Query } from \"../utils/Query\";\n\nexport const setQueryError = (\n  forQuery: Query,\n  errorMessage: string\n): SetQueryErrorAction =>\n  dispatch({\n    type: \"SET_QUERY_ERROR\",\n    forQuery,\n    errorMessage\n  });\n","import { SetBundleDataMultipleSourcesAction } from \"../reducers/schema\";\nimport { dispatch } from \"../store\";\n\nexport const setBundleMultipleSources = (\n  prBundleUrl: string,\n  baselineBundleUrl: string\n): SetBundleDataMultipleSourcesAction =>\n  dispatch({\n    type: \"SET_BUNDLE_DATA_MULTIPLE_SOURCES\",\n    baselineBundleUrl,\n    prBundleUrl\n  });\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"0d9965686a45607004f2.worker.js\");\n};"],"sourceRoot":""}