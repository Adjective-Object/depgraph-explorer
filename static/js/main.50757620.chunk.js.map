{"version":3,"sources":["reducers/bundleDataReducer.ts","grammar/isCompilationError.ts","grammar/grammar.ts","grammar/grammarDefinition.ts","reducers/queryReducer.ts","reducers/graphOptionsReducer.ts","reducers/appUIReducer.ts","reducers/tutorialReducer.ts","reducers/rootReducer.ts","store.ts","actions/setFilterText.ts","components/QueryEditor/QueryEditor.tsx","utils/isQueryResultError.ts","hooks/useToggle.tsx","components/ToggleArrow/ToggleArrow.tsx","components/GraphView/VisGraph.tsx","components/GraphView/GraphView.tsx","components/QueryEditor/QuerySidebar.tsx","components/QueryEditor/QueryExamples.tsx","components/QueryEditor/QueryTutorial.tsx","actions/setGraphOptions.ts","components/GraphOptionsEditor/GraphOptionsEditor.tsx","utils/formatByteSize.ts","components/GraphView/BundleSizeSummaryTable.tsx","utils/colors.ts","components/BundleLoaderView/BundleLoaderView.tsx","actions/setBundleBlobs.ts","actions/setAppUIState.ts","App.tsx","observer/postToWorkerDebouncedOnQueryChange.ts","observer/setQueryParametersOnStateChange.ts","actions/setBundleSource.ts","actions/setTutorials.ts","defaultTutorials.ts","index.tsx","actions/setQueryResult.ts","actions/markBundleDataLoadError.ts","actions/markBundleDataInitialized.ts","actions/setQueryError.ts","actions/setBundleMultipleSources.ts","worker.ts"],"names":["bundleDataReducer","produce","data","arguments","length","undefined","initializationState","type","bundleSource","action","bundleSourceUrl","sourceUrl","prUrl","prBundleUrl","baselineUrl","baselineBundleUrl","prBlob","baselineBlob","errorMessage","isCompilationError","v","filterGrammar","ohm","grammar","semantics","createSemantics","addOperation","Exp","e","getQueryTree","AndExp","left","_space1","_op","_space2","right","OrExp","PrimExp","ParenExp","_lparen","inner","_rparn","IncludedByExp","_includeToken","target","IncludesExp","InterpolateExp","_interpolateToken","innerExpression","innerQuery","NotExp","pathLiteral","_quoteOpen","body","_quoteClose","caseSensitiveToken","caseSensitive","sourceString","fileName","specialCaseLiteral","specialToken","literalType","toUpperCase","Error","concat","queryReducer","currentFilterText","compilationResult","lastSucessfulCompilation","queryResult","newFilter","input","match","console","log","succeeded","query","message","parseFilterStringToQuery","JSON","stringify","forQuery","resultingGraph","summary","graphOptionsReducer","store","isHierarchical","shouldStabilize","Object","objectSpread","options","appUIReducer","isLeftSidebarOpen","isRightSidebarOpen","tutorialReducer","newTutorials","rootReducer","combineReducers","bundleData","graphOptions","appUIState","tutorials","createStore","dispatch","setFilterText","CompilationError","_ref","react","className","QueryPermalink","text","useSelector","location","window","protocol","host","pathname","encodeURIComponent","href","QueryEditor","_useSelector2","writeOnChange","React","value","onChange","QueryEditor_QueryPermalink","QueryEditor_CompilationError","isQuerySuccess","r","useToggle","initialValue","_React$useState","_React$useState2","slicedToArray","isClosed","setIsClosed","toggleIsClosed","ToggleArrow","onClick","classNames","VisGraphLoadBar","percent","style","width","VisGraph","_ref2","graphData","containerRef","configContainerRef","_useSelector","loadingPercent","setLoadingPercent","_React$useState3","_React$useState4","isLoaded","setIsLoaded","_useToggle","_useToggle2","isConfigOpen","setIsConfigOpen","current","numNodesAndEdges","nodes","edges","updateInterval","Math","min","ceil","configure","enabled","showButton","container","physics","stabilization","layout","randomSeed","improvedLayout","hierarchical","sortMethod","shape","shapeProperties","borderRadius","arrows","network","vis","on","params","iterations","total","destroy","ref","components_ToggleArrow_ToggleArrow","VisGraph-open","VisGraph_VisGraphLoadBar","PendingInitialLoad","InitialLoadFailed","errVis","GraphViewPending","GraphViewEmpty","QueryErrorMessage","GraphViewTooLarge","_ref3","limit","size","showAnywayCallback","GraphView","isPending","numNodes","Number","showAnyway","setShowAnyway","onShowAnyway","GraphView_PendingInitialLoad","GraphView_InitialLoadFailed","GraphView_GraphViewPending","GraphView_GraphViewTooLarge","GraphView_QueryErrorMessage","GraphView_GraphViewEmpty","components_GraphView_VisGraph","QuerySidebar","children","QueryExamplesExample","exampleName","exampleBody","setFilterTextCallback","QueryExamplesInner","map","example","QueryExamples_QueryExamplesExample","assign","key","QueryExamples","QueryExamples_QueryExamplesInner","QueryTutorialOperatorList","QueryTutorial","QueryTutorial_QueryTutorialOperatorList","setGraphOptions","GraphOptionsEditor","setIsHierarchicalFromCheckbox","currentTarget","checked","setShouldStabilizeFromCheckbox","name","formatByteSize","unitIndex","floor","num","pow","toString","toFixed","styleForDeltaCell","x","max","backgroundColor","replace","abs","BundleSizeSummaryTableRow","numFilesAfter","numFilesDelta","formatCountChange","totalBytesAfter","totalBytesDelta","formatByteSizeChange","BundleSizeSummaryTable","BundleSizeSummaryTable_BundleSizeSummaryTableRow","entries","packages","sort","size1","size2","_ref6","_ref7","_ref10","_ref11","_ref14","_ref15","FileLoaderView","fileLoader","accept","isLoading","fileContent","loadError","useFileLoader","setIsLoading","setFileContent","_React$useState5","_React$useState6","setLoadError","files","fileReader","FileReader","readAsText","onload","result","onerror","error","BundleLoaderView","baseline","pullRequest","isUninitialized","initStoreMessage","baselineString","prString","appWorker","postMessage","setBundleBlobs","BundleLoaderView_FileLoaderView","setAppUIState","App","isLeftOpen","isRightOpen","hasBundleSource","toggleLeftSidebar","useCallback","toggleRightSidebar","react_default","a","createElement","Fragment","components_GraphView_BundleSizeSummaryTable","components_GraphView_GraphView","components_QueryEditor_QuerySidebar","components_QueryEditor_QueryEditor","components_GraphOptionsEditor_GraphOptionsEditor","components_QueryEditor_QueryExamples","components_QueryEditor_QueryTutorial","components_BundleLoaderView_BundleLoaderView","previousLastSucessfulCompilation","subscribe","currentCompilation","getState","debouncedPostMessage","debounce","lastQueryParams","URLSearchParams","search","currentParams","set","source","getQueryParams","newLocation","history","pushState","document","title","setTutorials","defaultTutorials","__webpack_require__","d","__webpack_exports__","AppWorker","onmessage","messageData","compResult","setQueryError","urlParams","initialQueryString","get","has","innerWidth","bundleDataSingleUrl","bundleDataPrUrl","bundleDataBaselineUrl","payloadUrl","fetch","then","json","catch","rootElement","getElementById","ReactDOM","es","src_App_0","module","exports","Worker","p"],"mappings":"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","file":"static/js/main.50757620.chunk.js","sourcesContent":["import { BundleDataState, AppAction } from \"./schema\";\r\nimport produce from \"immer\";\r\nexport const bundleDataReducer = produce(\r\n  (\r\n    data: BundleDataState = {\r\n      initializationState: { type: \"UNINITIALIZED\" },\r\n      bundleSource: null\r\n    },\r\n    action: AppAction\r\n  ): BundleDataState => {\r\n    switch (action.type) {\r\n      case \"SET_BUNDLE_DATA_SOURCE\":\r\n        data.bundleSource = {\r\n          type: \"SINGLE_URL\",\r\n          bundleSourceUrl: action.sourceUrl\r\n        };\r\n        data.initializationState = {\r\n          type: \"INITIALIZING\"\r\n        };\r\n        return data;\r\n      case \"SET_BUNDLE_DATA_MULTIPLE_SOURCES\":\r\n        data.bundleSource = {\r\n          type: \"MULTIPLE_URLS\",\r\n          prUrl: action.prBundleUrl,\r\n          baselineUrl: action.baselineBundleUrl\r\n        };\r\n        data.initializationState = {\r\n          type: \"INITIALIZING\"\r\n        };\r\n        return data;\r\n      case \"SET_BUNDLE_DATA_BLOBS\":\r\n        data.bundleSource = {\r\n          type: \"MULTIPLE_BLOBS\",\r\n          prBlob: action.prBlob,\r\n          baselineBlob: action.baselineBlob\r\n        };\r\n        data.initializationState = {\r\n          type: \"INITIALIZING\"\r\n        };\r\n        return data;\r\n      case \"MARK_BUNDLE_DATA_ERROR\":\r\n        data.initializationState = {\r\n          type: \"INITIALIZATION_FAILURE\",\r\n          errorMessage: action.errorMessage\r\n        };\r\n        return data;\r\n      case \"MARK_BUNDLE_DATA_INITIALIZED\":\r\n        data.initializationState = { type: \"INITIALIZED\" };\r\n        return data;\r\n      default:\r\n        return data;\r\n    }\r\n  }\r\n);\r\n","import { CompilationError, CompilationSuccess } from \"./compilationTypes\";\r\n\r\nexport const isCompilationError = (\r\n  v: CompilationError | CompilationSuccess | null\r\n): v is CompilationError => {\r\n  return v !== null && v.type === \"CompilationError\";\r\n};\r\n","import ohm from \"ohm-js\";\r\nimport { Query } from \"../utils/Query\";\r\nimport { CompilationResult } from \"./compilationTypes\";\r\nimport { filterGrammarText } from \"./grammarDefinition\";\r\n\r\nconst filterGrammar = ohm.grammar(filterGrammarText);\r\n\r\nconst semantics = filterGrammar.createSemantics().addOperation(\"getQueryTree\", {\r\n  Exp: (e: any): Query => {\r\n    return e.getQueryTree();\r\n  },\r\n  AndExp: (\r\n    left: any,\r\n    _space1: any,\r\n    _op: any,\r\n    _space2: any,\r\n    right: any\r\n  ): Query => {\r\n    return {\r\n      type: \"AND\",\r\n      left: left.getQueryTree(),\r\n      right: right.getQueryTree()\r\n    };\r\n  },\r\n  OrExp: (\r\n    left: any,\r\n    _space1: any,\r\n    _op: any,\r\n    _space2: any,\r\n    right: any\r\n  ): Query => {\r\n    return {\r\n      type: \"OR\",\r\n      left: left.getQueryTree(),\r\n      right: right.getQueryTree()\r\n    };\r\n  },\r\n  PrimExp: (e: any): Query => {\r\n    return e.getQueryTree();\r\n  },\r\n  ParenExp: (\r\n    _lparen: any,\r\n    _space1: any,\r\n    inner: any,\r\n    _space2: any,\r\n    _rparn: any\r\n  ): Query => {\r\n    return inner.getQueryTree();\r\n  },\r\n  IncludedByExp: (_includeToken: any, _space1: any, e: any): Query => {\r\n    return {\r\n      type: \"INCLUDEDBY\",\r\n      target: e.getQueryTree()\r\n    };\r\n  },\r\n  IncludesExp: (_includeToken: any, _space1: any, e: any): Query => {\r\n    return {\r\n      type: \"INCLUDES\",\r\n      target: e.getQueryTree()\r\n    };\r\n  },\r\n  InterpolateExp: (_interpolateToken: any, innerExpression: any): Query => {\r\n    return {\r\n      type: \"INTERPOLATE\",\r\n      innerQuery: innerExpression.getQueryTree()\r\n    };\r\n  },\r\n  NotExp: (_interpolateToken: any, innerExpression: any): Query => {\r\n    return {\r\n      type: \"NOT\",\r\n      innerQuery: innerExpression.getQueryTree()\r\n    };\r\n  },\r\n  pathLiteral: (\r\n    _quoteOpen: any,\r\n    body: any,\r\n    _quoteClose: any,\r\n    caseSensitiveToken: any\r\n  ): Query => {\r\n    return {\r\n      type: \"FILENAME\",\r\n      caseSensitive: caseSensitiveToken.sourceString === \"!\",\r\n      fileName: body.sourceString\r\n    };\r\n  },\r\n  specialCaseLiteral: (specialToken: any): Query => {\r\n    const literalType: string = specialToken.sourceString.toUpperCase();\r\n    if (\r\n      literalType !== \"ADDED\" &&\r\n      literalType !== \"CHANGED\" &&\r\n      literalType !== \"REMOVED\"\r\n    ) {\r\n      throw new Error(\r\n        `specialCaseLiteral had token \"${literalType}\", not one of ADDED/CHANGED/REMOVED`\r\n      );\r\n    }\r\n    return {\r\n      type: literalType\r\n    };\r\n  }\r\n});\r\n\r\nexport const parseFilterStringToQuery = (input: string): CompilationResult => {\r\n  const match = filterGrammar.match(input);\r\n  console.log(match);\r\n  console.log(match.succeeded() && semantics(match));\r\n  return match.succeeded()\r\n    ? {\r\n        type: \"CompilationSuccess\",\r\n        query: semantics(match).getQueryTree()\r\n      }\r\n    : {\r\n        type: \"CompilationError\",\r\n        message: match.message || \"\"\r\n      };\r\n};\r\n","export const filterGrammarText = `\r\nBundleQuery {\r\n  Exp\r\n    = AndExp | OrExp | PrimExp\r\n\r\n  AndExp\r\n    = PrimExp _ (\"&\"|\"&&\") _ PrimExp\r\n\r\n  OrExp\r\n    = PrimExp _ (\"|\"|\"||\") _ PrimExp\r\n\r\n  PrimExp\r\n    = NotExp | InterpolateExp | IncludesExp | IncludedByExp | pathLiteral | specialCaseLiteral | ParenExp\r\n\r\n  ParenExp = \"(\" _ Exp _ \")\"\r\n\r\n  InterpolateExp\r\n    = \"interpolate\" ParenExp\r\n\r\n  NotExp\r\n    = \"not\" ParenExp\r\n\r\n  IncludedByExp\r\n    = (\"included-by\"|\"included_by\"|\"includedby\"|\"includedBy\") _ (pathLiteral | specialCaseLiteral | ParenExp)\r\n\r\n  IncludesExp\r\n    = (\"includes\") _ Exp\r\n\r\n  pathLiteral\r\n    = (\"'\" pathLiteralInternal \"'\" \"!\"? )\r\n    | (\"\\\\\"\" pathLiteralInternal \"\\\\\"\" \"!\"? )\r\n\r\n  pathLiteralInternal\r\n    = (\" \"|\"@\"|alnum|\"\\\\\\\\\"|\"/\"|\".\"|\":\"|\"*\"|\"-\"|\"_\")*\r\n    \r\n  specialCaseLiteral\r\n    = \"removed\" | \"added\" | \"changed\"\r\n\r\n    _ = space*\r\n}\r\n`;\r\n","import { QueryState, AppAction } from \"./schema\";\r\nimport { produce } from \"immer\";\r\nimport { isCompilationError } from \"../grammar/isCompilationError\";\r\nimport { parseFilterStringToQuery } from \"../grammar/grammar\";\r\n\r\nexport const queryReducer = produce(\r\n  (\r\n    data: QueryState = {\r\n      currentFilterText: \"\",\r\n      compilationResult: null,\r\n      lastSucessfulCompilation: null,\r\n      queryResult: null\r\n    },\r\n    action: AppAction\r\n  ): QueryState => {\r\n    switch (action.type) {\r\n      case \"SET_FILTER_TEXT\":\r\n        data.currentFilterText = action.newFilter;\r\n        data.compilationResult = parseFilterStringToQuery(action.newFilter);\r\n        console.log(data.compilationResult);\r\n        if (\r\n          // Only commit update if the actual result is different deeply\r\n          !isCompilationError(data.compilationResult) &&\r\n          JSON.stringify(data.compilationResult) !==\r\n            JSON.stringify(data.lastSucessfulCompilation)\r\n        ) {\r\n          console.log(\"updating last sucessful compilation\");\r\n          data.lastSucessfulCompilation = data.compilationResult;\r\n          data.queryResult = null;\r\n        }\r\n        break;\r\n      case \"SET_QUERY_RESULT\":\r\n        if (\r\n          data.lastSucessfulCompilation !== null &&\r\n          JSON.stringify(action.forQuery) !==\r\n            JSON.stringify(data.lastSucessfulCompilation.query)\r\n        ) {\r\n          console.log(\r\n            \"ignoring query result because the last sucessful compilation does not match the query's target\"\r\n          );\r\n          return data;\r\n        }\r\n        data.queryResult = {\r\n          type: \"QUERY_SUCCESS\",\r\n          data: action.resultingGraph,\r\n          summary: action.summary\r\n        };\r\n        break;\r\n      case \"SET_QUERY_ERROR\":\r\n        if (\r\n          data.lastSucessfulCompilation !== null &&\r\n          JSON.stringify(action.forQuery) ===\r\n            JSON.stringify(data.lastSucessfulCompilation.query)\r\n        ) {\r\n          data.queryResult = {\r\n            type: \"QUERY_ERROR\",\r\n            errorMessage: action.errorMessage\r\n          };\r\n        }\r\n        break;\r\n      default:\r\n        return data;\r\n    }\r\n    return data;\r\n  }\r\n);\r\n","import { AppAction, GraphViewOptions } from \"./schema\";\r\nimport { produce } from \"immer\";\r\n\r\nexport const graphOptionsReducer = produce(\r\n  (\r\n    store: GraphViewOptions = {\r\n      isHierarchical: false,\r\n      shouldStabilize: false\r\n    },\r\n    action: AppAction\r\n  ): GraphViewOptions => {\r\n    switch (action.type) {\r\n      case \"SET_GRAPH_OPTIONS\":\r\n        return { ...store, ...action.options };\r\n      default:\r\n        return store;\r\n    }\r\n  }\r\n);\r\n","import { AppAction, AppUIState } from \"./schema\";\r\nimport { produce } from \"immer\";\r\n\r\nexport const appUIReducer = produce(\r\n  (\r\n    store: AppUIState = {\r\n      isLeftSidebarOpen: false,\r\n      isRightSidebarOpen: false\r\n    },\r\n    action: AppAction\r\n  ): AppUIState => {\r\n    switch (action.type) {\r\n      case \"SET_APP_UI\":\r\n        return { ...store, ...action.options };\r\n      default:\r\n        return store;\r\n    }\r\n  }\r\n);\r\n","import { Tutorial, AppAction } from \"./schema\";\r\nimport { produce } from \"immer\";\r\n\r\nexport const tutorialReducer = produce(\r\n  (data: Tutorial[] = [], action: AppAction): Tutorial[] => {\r\n    switch (action.type) {\r\n      case \"SET_TUTORIALS\":\r\n        return action.newTutorials;\r\n      default:\r\n        return data;\r\n    }\r\n  }\r\n);\r\n","import { combineReducers } from \"redux\";\r\nimport { bundleDataReducer } from \"./bundleDataReducer\";\r\nimport { queryReducer } from \"./queryReducer\";\r\nimport { RootStore, AppAction } from \"./schema\";\r\nimport { graphOptionsReducer } from \"./graphOptionsReducer\";\r\nimport { appUIReducer } from \"./appUIReducer\";\r\nimport { tutorialReducer } from \"./tutorialReducer\";\r\n\r\nexport const rootReducer = combineReducers<RootStore, AppAction>({\r\n  bundleData: bundleDataReducer,\r\n  query: queryReducer,\r\n  graphOptions: graphOptionsReducer,\r\n  appUIState: appUIReducer,\r\n  tutorials: tutorialReducer\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./reducers/rootReducer\";\r\nexport const store = createStore(rootReducer);\r\nexport const dispatch = store.dispatch;\r\n","import { SetFilterTextAction } from \"../reducers/schema\";\r\nimport { dispatch } from \"../store\";\r\n\r\nexport const setFilterText = (newFilter: string): SetFilterTextAction =>\r\n  dispatch({\r\n    type: \"SET_FILTER_TEXT\",\r\n    newFilter\r\n  });\r\n","import * as React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../../reducers/schema\";\r\nimport { isCompilationError } from \"../../grammar/isCompilationError\";\r\nimport \"./QueryEditor.css\";\r\nimport { setFilterText } from \"../../actions/setFilterText\";\r\n\r\nconst CompilationError = ({ message }: { message: string }) => (\r\n  <aside className=\"CompilationError-aside\">{message}</aside>\r\n);\r\n\r\nconst QueryPermalink = () => {\r\n  const { text } = useSelector((store: RootStore) => ({\r\n    text: store.query.currentFilterText\r\n  }));\r\n\r\n  const location =\r\n    window.location.protocol +\r\n    \"//\" +\r\n    window.location.host +\r\n    window.location.pathname +\r\n    \"?q=\" +\r\n    encodeURIComponent(text);\r\n\r\n  return (\r\n    <a className=\"QueryEditor-permalink\" href={location}>\r\n      permalink\r\n    </a>\r\n  );\r\n};\r\n\r\nconst QueryEditor = () => {\r\n  const { text, compilationResult } = useSelector((store: RootStore) => ({\r\n    text: store.query.currentFilterText,\r\n    compilationResult: store.query.compilationResult\r\n  }));\r\n\r\n  const writeOnChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n      setFilterText(e.target.value);\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <textarea\r\n        className=\"QueryEditor-body\"\r\n        value={text}\r\n        onChange={writeOnChange}\r\n      />\r\n      {<QueryPermalink />}\r\n      {isCompilationError(compilationResult) ? (\r\n        <CompilationError message={compilationResult.message} />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QueryEditor;\r\n","import { QuerySuccess, QueryError } from \"../reducers/schema\";\r\n\r\nexport const isQueryError = (\r\n  r: QuerySuccess | QueryError | null\r\n): r is QueryError => !!r && r.type === \"QUERY_ERROR\";\r\n\r\nexport const isQuerySuccess = (\r\n  r: QuerySuccess | QueryError | null\r\n): r is QuerySuccess => !!r && r.type === \"QUERY_SUCCESS\";\r\n","import * as React from \"react\";\r\nconst useToggle = (initialValue: boolean = false): [boolean, () => void] => {\r\n  const [isClosed, setIsClosed] = React.useState(initialValue);\r\n  const toggleIsClosed = React.useCallback(() => {\r\n    setIsClosed(!isClosed);\r\n  }, [isClosed]);\r\n  return [isClosed, toggleIsClosed];\r\n};\r\n\r\nexport default useToggle;\r\n","import * as React from \"react\";\r\nimport \"./ToggleArrow.css\";\r\nimport { default as classNames } from \"classnames\";\r\n\r\ntype ArgsOf<T> = T extends (...args: (infer A)[]) => any ? A : never;\r\n\r\nconst ToggleArrow = ({\r\n  isClosed,\r\n  onClick,\r\n  className\r\n}: {\r\n  isClosed: boolean;\r\n  onClick?: () => void;\r\n  className?: ArgsOf<typeof classNames>;\r\n}) => (\r\n  <button className={classNames(\"ToggleArrow\", className)} onClick={onClick}>\r\n    {isClosed ? \"▲\" : \"▼\"}\r\n  </button>\r\n);\r\nexport default ToggleArrow;\r\n","import * as React from \"react\";\r\nimport \"./VisGraph.css\";\r\nimport * as vis from \"vis\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../../reducers/schema\";\r\nimport classNames from \"classnames\";\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport ToggleArrow from \"../ToggleArrow/ToggleArrow\";\r\n\r\nconst VisGraphLoadBar = ({ percent }: { percent: number }) => {\r\n  return (\r\n    <section className=\"VisGraph-loader\">\r\n      Stabilizing..\r\n      <section className=\"VisGraph-loader-bar-wrapper\">\r\n        <span\r\n          className=\"VisGraph-loader-bar\"\r\n          style={{ width: `${percent}%` }}\r\n        />\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\nexport const VisGraph = ({ graphData }: { graphData: vis.Data | null }) => {\r\n  const containerRef = React.useRef<HTMLElement | null>(null);\r\n  const configContainerRef = React.useRef<HTMLElement | null>(null);\r\n  const { isHierarchical, shouldStabilize } = useSelector(\r\n    (store: RootStore) => store.graphOptions\r\n  );\r\n  const [loadingPercent, setLoadingPercent] = React.useState(0);\r\n  const [isLoaded, setIsLoaded] = React.useState(!shouldStabilize);\r\n  const [isConfigOpen, setIsConfigOpen] = useToggle(false);\r\n\r\n  React.useEffect(() => {\r\n    if (graphData == null || containerRef.current == null) {\r\n      return;\r\n    }\r\n\r\n    const numNodesAndEdges =\r\n      ((graphData.nodes && graphData.nodes.length) || 0) +\r\n      ((graphData.edges && graphData.edges.length) || 0);\r\n    const updateInterval = Math.min(50, Math.ceil(500 / numNodesAndEdges));\r\n    console.log(\"Stabilization updateInterval\", updateInterval);\r\n\r\n    const options = {\r\n      configure: {\r\n        enabled: true,\r\n        showButton: true,\r\n        container: configContainerRef.current\r\n      },\r\n      physics: {\r\n        stabilization: {\r\n          enabled: shouldStabilize,\r\n          updateInterval\r\n        }\r\n      },\r\n      layout: {\r\n        randomSeed: 191006,\r\n        improvedLayout: false,\r\n        hierarchical: {\r\n          enabled: isHierarchical,\r\n          sortMethod: \"directed\"\r\n        }\r\n      },\r\n      nodes: {\r\n        shape: \"box\",\r\n        shapeProperties: {\r\n          borderRadius: 1\r\n        }\r\n      },\r\n      edges: {\r\n        arrows: \"to\"\r\n      }\r\n    };\r\n    console.log(\"mount vis network\", containerRef.current, options);\r\n    console.log(\"nodes:\", graphData.nodes && graphData.nodes.length);\r\n    console.log(\"edges:\", graphData.edges && graphData.edges.length);\r\n\r\n    const network = new vis.Network(containerRef.current, graphData, options);\r\n\r\n    if (shouldStabilize) {\r\n      setIsLoaded(false);\r\n      network.on(\"stabilizationProgress\", params => {\r\n        const percent = (params.iterations / params.total) * 100;\r\n        setLoadingPercent(percent);\r\n      });\r\n      network.on(\"stabilizationIterationsDone\", () => {\r\n        setIsLoaded(true);\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      network.destroy();\r\n    };\r\n  }, [graphData, isHierarchical, containerRef, shouldStabilize]);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"VisGraph-vis-graph\" ref={containerRef} />\r\n      <button className=\"VisGraph-config-toggle\" onClick={setIsConfigOpen}>\r\n        graph config\r\n        <ToggleArrow isClosed={!isConfigOpen} />\r\n      </button>\r\n      <section\r\n        className={classNames(\"VisGraph-config-container\", {\r\n          \"VisGraph-open\": isConfigOpen\r\n        })}\r\n        ref={configContainerRef}\r\n      />\r\n      {isLoaded || !shouldStabilize ? null : (\r\n        <VisGraphLoadBar percent={loadingPercent} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VisGraph;\r\n","import * as React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore, InitializedBundleDataState } from \"../../reducers/schema\";\r\nimport \"./GraphView.css\";\r\nimport { isQueryError, isQuerySuccess } from \"../../utils/isQueryResultError\";\r\nimport VisGraph from \"./VisGraph\";\r\n\r\nconst PendingInitialLoad = () => (\r\n  <section className=\"GraphView-initial-load\">\r\n    Fetching and parsing bundle data..\r\n  </section>\r\n);\r\n\r\nconst InitialLoadFailed = ({\r\n  bundleData,\r\n  errorMessage\r\n}: {\r\n  bundleData: InitializedBundleDataState;\r\n  errorMessage: string;\r\n}) => {\r\n  let errVis = (() => {\r\n    const bundleSource = bundleData.bundleSource;\r\n    switch (bundleSource.type) {\r\n      case \"SINGLE_URL\":\r\n        return (\r\n          <p>\r\n            Url: <code>\"{bundleSource.bundleSourceUrl}\"</code>\r\n          </p>\r\n        );\r\n      case \"MULTIPLE_URLS\":\r\n        return (\r\n          <p>\r\n            Bundle url: <code>\"{bundleSource.baselineUrl}\"</code> <br></br>\r\n            PR url: <code>\"{bundleSource.prUrl}\"</code>\r\n          </p>\r\n        );\r\n      case \"MULTIPLE_BLOBS\":\r\n        return <p>Local blobs.</p>;\r\n    }\r\n  })();\r\n  return (\r\n    <section className=\"GraphView-error\">\r\n      <h2>Error Loading bundle</h2>\r\n      {errVis}\r\n      <pre>{errorMessage}</pre>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst GraphViewPending = () => (\r\n  <section className=\"GraphView-pending\">Running Query..</section>\r\n);\r\n\r\nconst GraphViewEmpty = () => (\r\n  <section className=\"GraphView-empty\">No Results</section>\r\n);\r\n\r\nconst QueryErrorMessage = ({ message }: { message: string }) => (\r\n  <section className=\"GraphView-error\">\r\n    <h2>Error while running query</h2>\r\n    <pre>{message}</pre>\r\n  </section>\r\n);\r\n\r\nconst GraphViewTooLarge = ({\r\n  limit,\r\n  size,\r\n  showAnywayCallback\r\n}: {\r\n  limit: number;\r\n  size: number;\r\n  showAnywayCallback: () => void;\r\n}) => (\r\n  <section className=\"Graphview-over-limit\">\r\n    <p>\r\n      {size} nodes is greater than default maximum of {limit} nodes.\r\n    </p>\r\n    <button\r\n      className=\"Graphview-show-anyway-button\"\r\n      onClick={showAnywayCallback}\r\n    >\r\n      Show Anyway\r\n    </button>\r\n  </section>\r\n);\r\n\r\nconst STATIC_LIMIT = 1000;\r\n\r\nconst GraphView = () => {\r\n  const { bundleData, isPending, numNodes, queryResult } = useSelector(\r\n    (store: RootStore) => ({\r\n      bundleData: store.bundleData,\r\n      isPending:\r\n        store.query.queryResult === null &&\r\n        store.query.lastSucessfulCompilation !== null,\r\n      numNodes: Number(\r\n        isQuerySuccess(store.query.queryResult) &&\r\n          store.query.queryResult.data.nodes &&\r\n          store.query.queryResult.data.nodes.length\r\n      ),\r\n      queryResult: store.query.queryResult\r\n    })\r\n  );\r\n\r\n  const [showAnyway, setShowAnyway] = React.useState(false);\r\n  const onShowAnyway = React.useCallback(() => {\r\n    setShowAnyway(true);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    if (showAnyway && isPending) {\r\n      setShowAnyway(false);\r\n    }\r\n  }, [showAnyway, isPending]);\r\n\r\n  return (\r\n    <section className=\"GraphView-host\">\r\n      {bundleData.initializationState.type === \"UNINITIALIZED\" ? (\r\n        <PendingInitialLoad />\r\n      ) : bundleData.initializationState.type === \"INITIALIZATION_FAILURE\" ? (\r\n        <InitialLoadFailed\r\n          bundleData={bundleData as InitializedBundleDataState}\r\n          errorMessage={bundleData.initializationState.errorMessage}\r\n        />\r\n      ) : isPending || queryResult == null ? (\r\n        <GraphViewPending />\r\n      ) : !showAnyway && numNodes > STATIC_LIMIT ? (\r\n        <GraphViewTooLarge\r\n          limit={STATIC_LIMIT}\r\n          size={numNodes}\r\n          showAnywayCallback={onShowAnyway}\r\n        />\r\n      ) : isQueryError(queryResult) ? (\r\n        <QueryErrorMessage message={queryResult.errorMessage} />\r\n      ) : numNodes === 0 ? (\r\n        <GraphViewEmpty />\r\n      ) : (\r\n        <VisGraph graphData={queryResult.data} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GraphView;\r\n","import * as React from \"react\";\r\nimport \"./QuerySidebar.css\";\r\n\r\nconst QuerySidebar = ({\r\n  children\r\n}: {\r\n  children: React.ReactElement | React.ReactElement[];\r\n}) => <section className=\"QuerySidebar-host\">{children}</section>;\r\n\r\nexport default QuerySidebar;\r\n","import * as React from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport \"./QueryExamples.css\";\r\nimport { setFilterText } from \"../../actions/setFilterText\";\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport ToggleArrow from \"../ToggleArrow/ToggleArrow\";\r\nimport { RootStore } from \"../../reducers/schema\";\r\n\r\nconst QueryExamplesExample = ({\r\n  exampleName,\r\n  exampleBody\r\n}: {\r\n  exampleName: string;\r\n  exampleBody: string;\r\n}) => {\r\n  const setFilterTextCallback = React.useCallback(() => {\r\n    setFilterText(exampleBody);\r\n  }, [exampleBody]);\r\n\r\n  return (\r\n    <li className=\"QueryExamples-example\" onClick={setFilterTextCallback}>\r\n      {exampleName}\r\n      {/* <td>{exampleBody}</td> */}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst QueryExamplesInner = () => {\r\n  const tutorials = useSelector((store: RootStore) => \r\n    store.tutorials\r\n  );\r\n  return (\r\n    <>\r\n      <p className=\"QueryExamples-helptext\">\r\n        Click an example to load it in the editor.\r\n      </p>\r\n      {tutorials.map(example => (\r\n        <QueryExamplesExample {...example} key={example.exampleName} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst QueryExamples = () => {\r\n  const [isClosed, toggleIsClosed] = useToggle();\r\n  return (\r\n    <ul className=\"QueryExamples-wrapper\">\r\n      <h2 className=\"QueryExamples-header\" onClick={toggleIsClosed}>\r\n        Examples: <ToggleArrow isClosed={isClosed} />\r\n      </h2>\r\n      {isClosed ? null : <QueryExamplesInner />}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default QueryExamples;\r\n","import * as React from \"react\";\r\nimport \"./QueryTutorial.css\";\r\nimport useToggle from \"../../hooks/useToggle\";\r\nimport ToggleArrow from \"../ToggleArrow/ToggleArrow\";\r\n\r\nconst QueryTutorialOperatorList = () => (\r\n  <ul>\r\n    <li className=\"QueryTutorial-operator\">\r\n      <span className=\"QueryTutorial-operator-text\">\"*some/filename.js\"</span>\r\n      <span className=\"QueryTutorial-operator-explanation\">\r\n        Select files where part of the path matches the text inside the quotes.\r\n        Case insensitive. Use '*' for a wildcard.\r\n      </span>\r\n    </li>\r\n    <li className=\"QueryTutorial-operator\">\r\n      <span className=\"QueryTutorial-operator-text\">\"some*File.css\"!</span>\r\n      <span className=\"QueryTutorial-operator-explanation\">\r\n        Case sensitive alternate of the above\r\n      </span>\r\n    </li>\r\n    <li className=\"QueryTutorial-operator\">\r\n      <span className=\"QueryTutorial-operator-text\">\r\n        includes {\"<subquery>\"}\r\n      </span>\r\n      <span className=\"QueryTutorial-operator-explanation\">\r\n        Select all files which directly or indirectly include any target of the\r\n        subquery\r\n      </span>\r\n    </li>\r\n    <li className=\"QueryTutorial-operator\">\r\n      <span className=\"QueryTutorial-operator-text\">\r\n        included_by {\"<subquery>\"}\r\n      </span>\r\n      <span className=\"QueryTutorial-operator-explanation\">\r\n        Select all files which are directly or indirectly included by any target\r\n        of the subquery\r\n      </span>\r\n    </li>\r\n    <li className=\"QueryTutorial-operator\">\r\n      <span className=\"QueryTutorial-operator-text\">\r\n        {\"<A>\"} &amp; {\"<B>\"}\r\n      </span>\r\n      <span className=\"QueryTutorial-operator-explanation\">\r\n        Select all files in selected by both A and B\r\n      </span>\r\n    </li>\r\n    <li className=\"QueryTutorial-operator\">\r\n      <span className=\"QueryTutorial-operator-text\">\r\n        {\"<A>\"} | {\"<B>\"}\r\n      </span>\r\n      <span className=\"QueryTutorial-operator-explanation\">\r\n        Select all files in selected by either A or B\r\n      </span>\r\n    </li>\r\n    <li className=\"QueryTutorial-operator\">\r\n      <span className=\"QueryTutorial-operator-text\">removed</span>\r\n      <span className=\"QueryTutorial-operator-explanation\">\r\n        Selects all files removed by the change\r\n      </span>\r\n    </li>\r\n    <li className=\"QueryTutorial-operator\">\r\n      <span className=\"QueryTutorial-operator-text\">added</span>\r\n      <span className=\"QueryTutorial-operator-explanation\">\r\n        Selects all files added by the change\r\n      </span>\r\n    </li>\r\n    <li className=\"QueryTutorial-operator\">\r\n      <span className=\"QueryTutorial-operator-text\">changed</span>\r\n      <span className=\"QueryTutorial-operator-explanation\">\r\n        Selects all files that were added, removed, or have size differences\r\n      </span>\r\n    </li>\r\n    <li className=\"QueryTutorial-operator\">\r\n      <span className=\"QueryTutorial-operator-text\">\r\n        interpolate( {\"<subexpression>\"} )\r\n      </span>\r\n      <span className=\"QueryTutorial-operator-explanation\">\r\n        Selects nodes that form paths between nodes in the selected set.\r\n      </span>\r\n    </li>\r\n    <li className=\"QueryTutorial-operator\">\r\n      <span className=\"QueryTutorial-operator-text\">\r\n        ( {\"<subexpression>\"} )\r\n      </span>\r\n      <span className=\"QueryTutorial-operator-explanation\">\r\n        Selects the results as the subexpression\r\n      </span>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst QueryTutorial = () => {\r\n  const [isClosed, toggleIsClosed] = useToggle();\r\n\r\n  return (\r\n    <section className=\"QueryTutorial-body\">\r\n      <h2 className=\"QueryTutorial-header\" onClick={toggleIsClosed}>\r\n        Operators <ToggleArrow isClosed={isClosed} />\r\n      </h2>\r\n      {isClosed ? null : <QueryTutorialOperatorList />}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default QueryTutorial;\r\n","import { GraphViewOptions, SetGraphOptionsAction } from \"../reducers/schema\";\r\nimport { dispatch } from \"../store\";\r\n\r\nexport const setGraphOptions = (\r\n  options: Partial<GraphViewOptions>\r\n): SetGraphOptionsAction =>\r\n  dispatch({\r\n    type: \"SET_GRAPH_OPTIONS\",\r\n    options\r\n  });\r\n","import * as React from \"react\";\r\nimport \"./GraphOptionsEditor.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../../reducers/schema\";\r\nimport { setGraphOptions } from \"../../actions/setGraphOptions\";\r\n\r\nconst GraphOptionsEditor = () => {\r\n  const { isHierarchical, shouldStabilize } = useSelector(\r\n    (store: RootStore) => store.graphOptions\r\n  );\r\n  const setIsHierarchicalFromCheckbox = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setGraphOptions({\r\n        isHierarchical: !!e.currentTarget.checked\r\n      });\r\n    },\r\n    []\r\n  );\r\n  const setShouldStabilizeFromCheckbox = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setGraphOptions({\r\n        shouldStabilize: !!e.currentTarget.checked\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <section className=\"GraphViewOptions-wrapper\">\r\n      <h2>Options:</h2>\r\n      <label className=\"GraphViewOptions-label\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isHierarchical\"\r\n          onChange={setIsHierarchicalFromCheckbox}\r\n          checked={isHierarchical}\r\n        />\r\n        Force Hierarchical Nodes (better for small graphs)\r\n      </label>\r\n      <label className=\"GraphViewOptions-label\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"shouldStabilize\"\r\n          onChange={setShouldStabilizeFromCheckbox}\r\n          checked={shouldStabilize}\r\n        />\r\n        pre-stabilize the network\r\n      </label>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GraphOptionsEditor;\r\n","export const formatByteSize = (size: number) => {\r\n  if (size === 0) {\r\n    return \"0\";\r\n  }\r\n  const unitIndex = Math.floor(Math.log(size) / Math.log(1024));\r\n  const num = size / Math.pow(1024, unitIndex);\r\n  return (\r\n    (unitIndex === 0 ? num.toString() : num.toFixed(2)) +\r\n    [\"B\", \"kB\", \"MB\", \"GB\", \"TB\"][unitIndex]\r\n  );\r\n};\r\n\r\nexport const formatByteSizeChange = (size: number) =>\r\n  size > 0 ? `+${formatByteSize(size)}` : `-${formatByteSize(Math.abs(size))}`;\r\n\r\nexport const formatCountChange = (size: number) =>\r\n  size > 0 ? `+${size}` : `-${Math.abs(size)}`;\r\n","import * as React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore, SizeSummary } from \"../../reducers/schema\";\r\nimport { isQuerySuccess } from \"../../utils/isQueryResultError\";\r\nimport \"./BundleSizeSummaryTable.css\";\r\nimport {\r\n  formatByteSize,\r\n  formatByteSizeChange,\r\n  formatCountChange\r\n} from \"../../utils/formatByteSize\";\r\nimport { GOOD_COLOR, BAD_COLOR } from \"../../utils/colors\";\r\n\r\nconst BAD_BASELINE = 4096;\r\nconst styleForDeltaCell = (x: number): React.CSSProperties => {\r\n  const percent = Math.max(-1, Math.min(1, x / BAD_BASELINE));\r\n  const targetColor = percent < 0 ? GOOD_COLOR : BAD_COLOR;\r\n  const color = targetColor.replace(\r\n    /1\\)$/,\r\n    Math.abs(1 - Math.pow(1 - percent, 3)).toString()\r\n  );\r\n  return {\r\n    backgroundColor: color\r\n  };\r\n};\r\n\r\nconst BundleSizeSummaryTableRow = ({\r\n  name,\r\n  size,\r\n  className\r\n}: {\r\n  name: string;\r\n  size: SizeSummary;\r\n  className?: string;\r\n}) => (\r\n  <tr className={className}>\r\n    <td>{name}</td>\r\n    <td>{size.numFilesAfter}</td>\r\n    <td style={styleForDeltaCell(size.numFilesDelta)}>\r\n      {formatCountChange(size.numFilesDelta)}\r\n    </td>\r\n    <td>{formatByteSize(size.totalBytesAfter)}</td>\r\n    <td style={styleForDeltaCell(size.totalBytesDelta)}>\r\n      {formatByteSizeChange(size.totalBytesDelta)}\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport const BundleSizeSummaryTable = () => {\r\n  const summary = useSelector((store: RootStore) =>\r\n    isQuerySuccess(store.query.queryResult)\r\n      ? store.query.queryResult.summary\r\n      : null\r\n  );\r\n  return summary == null ? null : (\r\n    <section className=\"BundleSizeSummary-container\">\r\n      <table className=\"BundleSizeSummary-table\">\r\n        <tbody>\r\n          <tr className={\"BundleSizeSummary-titleRow\"}>\r\n            <td>Name</td>\r\n            <td># Files</td>\r\n            <td>Δ Files</td>\r\n            <td>Size</td>\r\n            <td>Δ Size</td>\r\n          </tr>\r\n          <BundleSizeSummaryTableRow\r\n            className=\"BundleSizeSummary-totalsRow\"\r\n            name={\"Total\"}\r\n            size={summary.total}\r\n          />\r\n          {Object.entries(summary.packages)\r\n            .sort(\r\n              (\r\n                [, size1]: [string, SizeSummary],\r\n                [, size2]: [string, SizeSummary]\r\n              ) => {\r\n                return (\r\n                  Math.abs(size2.totalBytesAfter) -\r\n                  Math.abs(size1.totalBytesAfter)\r\n                );\r\n              }\r\n            )\r\n            .sort(\r\n              (\r\n                [, size1]: [string, SizeSummary],\r\n                [, size2]: [string, SizeSummary]\r\n              ) => {\r\n                return (\r\n                  Math.abs(size2.totalBytesAfter) -\r\n                  Math.abs(size1.totalBytesAfter)\r\n                );\r\n              }\r\n            )\r\n            .sort(\r\n              (\r\n                [, size1]: [string, SizeSummary],\r\n                [, size2]: [string, SizeSummary]\r\n              ) => {\r\n                return (\r\n                  Math.abs(size2.totalBytesDelta) -\r\n                  Math.abs(size1.totalBytesDelta)\r\n                );\r\n              }\r\n            )\r\n            .map(([name, size]: [string, SizeSummary]) => (\r\n              <BundleSizeSummaryTableRow name={name} size={size} />\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BundleSizeSummaryTable;\r\n","export const BAD_COLOR = \"rgba(255, 20, 120, 1)\";\r\nexport const GOOD_COLOR = \"rgba(34, 170, 238, 1)\";\r\n","import * as React from \"react\";\r\nimport \"./BundleLoaderView.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../../reducers/schema\";\r\nimport { setBundleBlobs } from \"../../actions/setBundleBlobs\";\r\n\r\ninterface FileLoader {\r\n  isLoading: boolean;\r\n  fileContent: string | null;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  loadError: Error | null;\r\n}\r\n\r\nconst FileLoaderView = ({ fileLoader }: { fileLoader: FileLoader }) => {\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/json\"\r\n        onChange={fileLoader.onChange}\r\n      />\r\n      {fileLoader.isLoading && (\r\n        <span className=\"BundleLoaderView-loading\">Loading...</span>\r\n      )}\r\n      {fileLoader.fileContent !== null && (\r\n        <span className=\"BundleLoaderView-loaded\">Loaded!</span>\r\n      )}\r\n      {fileLoader.loadError && (\r\n        <span className=\"BundleLoaderView-error\">\r\n          {fileLoader.loadError.toString()}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst useFileLoader = () => {\r\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\r\n  const [fileContent, setFileContent] = React.useState<string | null>(null);\r\n  const [loadError, setLoadError] = React.useState<Error | null>(null);\r\n\r\n  const onChange = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const files = e.target.files as FileList;\r\n\r\n      if (!files || files.length !== 1) {\r\n        return;\r\n      }\r\n\r\n      setIsLoading(true);\r\n\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsText(files[0]);\r\n      fileReader.onload = (e: ProgressEvent) => {\r\n        setIsLoading(false);\r\n        if (e.target && typeof fileReader.result === \"string\") {\r\n          setFileContent(fileReader.result);\r\n        }\r\n      };\r\n      fileReader.onerror = (e: ProgressEvent) => {\r\n        setIsLoading(false);\r\n        fileReader && setLoadError(fileReader.error);\r\n      };\r\n    },\r\n    []\r\n  );\r\n\r\n  return {\r\n    isLoading,\r\n    fileContent,\r\n    onChange,\r\n    loadError\r\n  };\r\n};\r\n\r\nconst BundleLoaderView = () => {\r\n  const baseline = useFileLoader();\r\n  const pullRequest = useFileLoader();\r\n\r\n  const isUninitialized = useSelector(\r\n    (store: RootStore) =>\r\n      store.bundleData.initializationState.type === \"UNINITIALIZED\"\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (isUninitialized && baseline.fileContent && pullRequest.fileContent) {\r\n      setBundleBlobs(baseline.fileContent, pullRequest.fileContent);\r\n    }\r\n  }, [isUninitialized, baseline.fileContent, pullRequest.fileContent]);\r\n\r\n  return (\r\n    <section className=\"BundleLoaderView-wrapper\">\r\n      baseline:\r\n      <FileLoaderView fileLoader={baseline} />\r\n      pull request\r\n      <FileLoaderView fileLoader={pullRequest} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BundleLoaderView;\r\n","import { SetBundleDataBlobsAction } from \"../reducers/schema\";\r\nimport { dispatch } from \"../store\";\r\nimport { InitStoreFromBundleRequestMessage } from \"../worker/messages\";\r\nimport { appWorker } from \"..\";\r\n\r\nexport const setBundleBlobs = (\r\n  baselineBlob: string,\r\n  prBlob: string\r\n): SetBundleDataBlobsAction => {\r\n  const initStoreMessage: InitStoreFromBundleRequestMessage = {\r\n    type: \"INIT_STORE_FROM_BUNDLE_STATS_STRINGS\",\r\n    baselineString: baselineBlob,\r\n    prString: prBlob\r\n  };\r\n  appWorker.postMessage(initStoreMessage);\r\n\r\n  return dispatch({\r\n    type: \"SET_BUNDLE_DATA_BLOBS\",\r\n    baselineBlob,\r\n    prBlob\r\n  });\r\n};\r\n","import { AppUIState, SetAppUIStateAction } from \"../reducers/schema\";\r\nimport { dispatch } from \"../store\";\r\n\r\nexport const setAppUIState = (\r\n  options: Partial<AppUIState>\r\n): SetAppUIStateAction =>\r\n  dispatch({\r\n    type: \"SET_APP_UI\",\r\n    options\r\n  });\r\n","import React from \"react\";\r\nimport QueryEditor from \"./components/QueryEditor/QueryEditor\";\r\nimport GraphView from \"./components/GraphView/GraphView\";\r\nimport QuerySidebar from \"./components/QueryEditor/QuerySidebar\";\r\nimport QueryExamples from \"./components/QueryEditor/QueryExamples\";\r\nimport QueryTutorial from \"./components/QueryEditor/QueryTutorial\";\r\nimport GraphOptionsEditor from \"./components/GraphOptionsEditor/GraphOptionsEditor\";\r\nimport BundleSizeSummaryTable from \"./components/GraphView/BundleSizeSummaryTable\";\r\nimport ToggleArrow from \"./components/ToggleArrow/ToggleArrow\";\r\nimport BundleLoaderView from \"./components/BundleLoaderView/BundleLoaderView\";\r\nimport \"./App.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"./reducers/schema\";\r\nimport { setAppUIState } from \"./actions/setAppUIState\";\r\n\r\nconst App: React.FC = () => {\r\n  const { isLeftOpen, isRightOpen, hasBundleSource } = useSelector(\r\n    (store: RootStore) => ({\r\n      isLeftOpen: store.appUIState.isLeftSidebarOpen,\r\n      isRightOpen: store.appUIState.isRightSidebarOpen,\r\n      hasBundleSource:\r\n        store.bundleData.initializationState.type !== \"UNINITIALIZED\"\r\n    })\r\n  );\r\n  const toggleLeftSidebar = React.useCallback(() => {\r\n    setAppUIState({\r\n      isLeftSidebarOpen: !isLeftOpen\r\n    });\r\n  }, [isLeftOpen]);\r\n  const toggleRightSidebar = React.useCallback(() => {\r\n    setAppUIState({\r\n      isRightSidebarOpen: !isRightOpen\r\n    });\r\n  }, [isRightOpen]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <ToggleArrow\r\n          className=\"App-toggle\"\r\n          isClosed={isLeftOpen}\r\n          onClick={toggleLeftSidebar}\r\n        />\r\n        <h1>Bundle Size Explorer</h1>\r\n        <ToggleArrow\r\n          className=\"App-toggle\"\r\n          isClosed={isRightOpen}\r\n          onClick={toggleRightSidebar}\r\n        />\r\n      </header>\r\n      <section className=\"App-body\">\r\n        {hasBundleSource ? (\r\n          <>\r\n            {isLeftOpen && <BundleSizeSummaryTable />}\r\n            <GraphView />\r\n            {isRightOpen && (\r\n              <QuerySidebar>\r\n                <QueryEditor />\r\n                <GraphOptionsEditor />\r\n                <QueryExamples />\r\n                <QueryTutorial />\r\n              </QuerySidebar>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <BundleLoaderView />\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { PerformQueryRequestMessage } from \"../worker/messages\";\r\nimport { store } from \"../store\";\r\nimport { CompilationSuccess } from \"../grammar/compilationTypes\";\r\nimport debounce from \"lodash/debounce\";\r\nimport { isCompilationError } from \"../grammar/isCompilationError\";\r\nimport { appWorker } from \"..\";\r\n\r\n/**\r\n * Post the message, debounced.\r\n */\r\n\r\nlet previousLastSucessfulCompilation: CompilationSuccess | null = null;\r\nstore.subscribe(() => {\r\n  const currentCompilation = store.getState().query.lastSucessfulCompilation;\r\n  if (previousLastSucessfulCompilation !== currentCompilation) {\r\n    previousLastSucessfulCompilation = currentCompilation;\r\n    if (currentCompilation && !isCompilationError(currentCompilation)) {\r\n      debouncedPostMessage({\r\n        type: \"QUERY_REQUEST\",\r\n        query: currentCompilation.query\r\n      });\r\n    }\r\n  }\r\n});\r\n\r\nconst debouncedPostMessage = debounce(\r\n  (message: PerformQueryRequestMessage) => appWorker.postMessage(message),\r\n  300\r\n);\r\n","import { store } from \"../store\";\r\nimport { RootStore } from \"../reducers/schema\";\r\n\r\nconst getQueryParams = (store: RootStore): URLSearchParams => {\r\n  const params: URLSearchParams = new URLSearchParams();\r\n  if (!store.appUIState.isLeftSidebarOpen) {\r\n    params.set(\"lc\", \"\");\r\n  }\r\n  if (!store.appUIState.isRightSidebarOpen) {\r\n    params.set(\"rc\", \"\");\r\n  }\r\n  params.set(\"q\", store.query.currentFilterText);\r\n  if (store.graphOptions.isHierarchical) {\r\n    params.set(\"hi\", \"\");\r\n  }\r\n  if (store.graphOptions.shouldStabilize) {\r\n    params.set(\"stab\", \"\");\r\n  }\r\n  if (store.bundleData.bundleSource) {\r\n    const source = store.bundleData.bundleSource;\r\n    switch (source.type) {\r\n      case \"SINGLE_URL\":\r\n        params.set(\"bundle\", source.bundleSourceUrl);\r\n        break;\r\n      case \"MULTIPLE_URLS\":\r\n        params.set(\"pr_bundle\", source.prUrl);\r\n        params.set(\"base_bundle\", source.baselineUrl);\r\n        break;\r\n      case \"MULTIPLE_BLOBS\":\r\n    }\r\n  }\r\n  params.sort();\r\n  return params;\r\n};\r\n\r\n/**\r\n * Post the message, debounced.\r\n */\r\n\r\nlet lastQueryParams: URLSearchParams = new URLSearchParams(\r\n  window.location.search\r\n);\r\nlastQueryParams.sort();\r\nstore.subscribe(() => {\r\n  const currentParams = getQueryParams(store.getState());\r\n  if (currentParams.toString() !== lastQueryParams.toString()) {\r\n    lastQueryParams = currentParams;\r\n    const newLocation =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname +\r\n      \"?\" +\r\n      currentParams\r\n        .toString()\r\n        .replace(/=&/g, \"&\")\r\n        .replace(/=$/g, \"\");\r\n    window.history.pushState(null, document.title, newLocation);\r\n  }\r\n});\r\n","import { SetBundleDataSourceAction } from \"../reducers/schema\";\r\nimport { dispatch } from \"../store\";\r\n\r\nexport const setBundleSource = (sourceUrl: string): SetBundleDataSourceAction =>\r\n  dispatch({\r\n    type: \"SET_BUNDLE_DATA_SOURCE\",\r\n    sourceUrl\r\n  });\r\n","import { SetTutorialsAction, Tutorial } from \"../reducers/schema\";\r\nimport { dispatch } from \"../store\";\r\n\r\nexport const setTutorials = (newTutorials: Tutorial[]): SetTutorialsAction =>\r\n  dispatch({\r\n    type: \"SET_TUTORIALS\",\r\n    newTutorials\r\n  });\r\n","export const defaultTutorials = [\r\n  { exampleName: \"Added Files\", exampleBody: \"added\" },\r\n  { exampleName: \"Removed Files\", exampleBody: \"removed\" },\r\n  { exampleName: \"Changed Files\", exampleBody: \"changed\" },\r\n  { exampleName: \"Package 1\", exampleBody: \"'package1/lib'\" },\r\n  {\r\n    exampleName: \"Package 1 and Package 2\",\r\n    exampleBody: \"'package1/lib'\\n  | 'package2/lib' \"\r\n  },\r\n  {\r\n    exampleName: \"Json files in package 1\",\r\n    exampleBody: \"'package1/*json'\\n \"\r\n  },\r\n  {\r\n    exampleName: \"package1 files that include the current changes\",\r\n    exampleBody: \"includes changed & 'package1'\"\r\n  },\r\n  {\r\n    exampleName: \"packages indexes included by Package 1\",\r\n    exampleBody: \"(included_by '*package1*') & '*index.js*'\"\r\n  },\r\n  {\r\n    exampleName: \"packages included by package 1, tracing dependenices\",\r\n    exampleBody: \"interpolate( (included_by '*package1*') & '*index.js*' )\"\r\n  }\r\n];\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\n\r\nimport App from \"./App\";\r\nimport {\r\n  InitStoreFromUrlRequestMessage,\r\n  WorkerToAppMessage,\r\n  InitStoreFromMultiUrlRequestMessage\r\n} from \"./worker/messages\";\r\nimport { markBundleDataInitialized } from \"./actions/markBundleDataInitialized\";\r\nimport { setQueryResult } from \"./actions/setQueryResult\";\r\nimport { setFilterText } from \"./actions/setFilterText\";\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport AppWorker from \"worker-loader!./worker\";\r\nimport { setQueryError } from \"./actions/setQueryError\";\r\nimport { setGraphOptions } from \"./actions/setGraphOptions\";\r\nimport { setAppUIState } from \"./actions/setAppUIState\";\r\n\r\nimport \"./observer/postToWorkerDebouncedOnQueryChange\";\r\nimport \"./observer/setQueryParametersOnStateChange\";\r\nimport { setBundleSource } from \"./actions/setBundleSource\";\r\nimport { setTutorials } from \"./actions/setTutorials\";\r\nimport { markBundleDataLoadError } from \"./actions/markBundleDataLoadError\";\r\nimport { defaultTutorials } from \"./defaultTutorials\";\r\nimport { setBundleMultipleSources } from \"./actions/setBundleMultipleSources\";\r\n\r\n//////////////////////\r\n// Spawn the worker //\r\n//////////////////////\r\nexport const appWorker = new AppWorker();\r\nappWorker.onmessage = function(e: MessageEvent): void {\r\n  const messageData = e.data as WorkerToAppMessage;\r\n  console.log(\"App: Message received from worker script\", messageData);\r\n  switch (messageData.type) {\r\n    case \"STORE_LOADED\":\r\n      markBundleDataInitialized();\r\n      // handle load / compilation message race\r\n      const compResult = store.getState().query.compilationResult;\r\n      if (compResult && compResult.type === \"CompilationSuccess\") {\r\n        appWorker.postMessage({\r\n          type: \"QUERY_REQUEST\",\r\n          query: compResult.query\r\n        });\r\n      }\r\n      break;\r\n    case \"STORE_LOAD_ERROR\":\r\n      markBundleDataLoadError(messageData.errorMessage);\r\n      break;\r\n    case \"QUERY_RESULT\":\r\n      setQueryResult(\r\n        messageData.forQuery,\r\n        messageData.result,\r\n        messageData.summary\r\n      );\r\n      break;\r\n    case \"QUERY_ERROR\":\r\n      setQueryError(messageData.forQuery, messageData.errorMessage);\r\n      break;\r\n  }\r\n};\r\n\r\n//////////////////////////////////\r\n// Initialize state from params //\r\n//////////////////////////////////\r\n\r\nconst urlParams = new URLSearchParams(window.location.search);\r\nconst initialQueryString = urlParams.get(\"q\") || \"changed\";\r\nif (initialQueryString) {\r\n  setFilterText(initialQueryString);\r\n}\r\nsetGraphOptions({\r\n  isHierarchical: !!urlParams.has(\"hi\"),\r\n  shouldStabilize: !!urlParams.has(\"stab\")\r\n});\r\nsetAppUIState({\r\n  isLeftSidebarOpen: !(urlParams.has(\"lc\") || window.innerWidth < 1000),\r\n  isRightSidebarOpen: !urlParams.has(\"rc\")\r\n});\r\n\r\n// Init bundle data form URL params\r\nconst bundleDataSingleUrl: string | null = urlParams.get(\"bundle\");\r\nconst bundleDataPrUrl: string | null = urlParams.get(\"pr_bundle\");\r\nconst bundleDataBaselineUrl: string | null = urlParams.get(\"baseline_bundle\");\r\n\r\nif (bundleDataSingleUrl) {\r\n  setBundleSource(bundleDataSingleUrl);\r\n  const initStoreMessage: InitStoreFromUrlRequestMessage = {\r\n    type: \"INIT_STORE_FROM_URL\",\r\n    payloadUrl: bundleDataSingleUrl\r\n  };\r\n  appWorker.postMessage(initStoreMessage);\r\n} else if (bundleDataPrUrl && bundleDataBaselineUrl) {\r\n  setBundleMultipleSources(bundleDataPrUrl, bundleDataBaselineUrl);\r\n  const initStoreMessage: InitStoreFromMultiUrlRequestMessage = {\r\n    type: \"INIT_STORE_FROM_MULTI_URL\",\r\n    prUrl: bundleDataPrUrl,\r\n    baselineUrl: bundleDataBaselineUrl\r\n  };\r\n  appWorker.postMessage(initStoreMessage);\r\n}\r\n\r\n// fetch the tutorial\r\nfetch(\"./tutorial_examples.json\")\r\n  .then(r => r.json())\r\n  .then(tutorials => setTutorials(tutorials))\r\n  .catch(e => setTutorials(defaultTutorials));\r\n\r\n///////////////////\r\n// Mount the app //\r\n///////////////////\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n);\r\n","import { SetQueryResultAction, BundleSizeSummary } from \"../reducers/schema\";\r\nimport { dispatch } from \"../store\";\r\nimport { Query } from \"../utils/Query\";\r\nimport { Data as VisData } from \"vis\";\r\n\r\nexport const setQueryResult = (\r\n  forQuery: Query,\r\n  resultingGraph: VisData,\r\n  summary: BundleSizeSummary\r\n): SetQueryResultAction =>\r\n  dispatch({\r\n    type: \"SET_QUERY_RESULT\",\r\n    forQuery,\r\n    resultingGraph,\r\n    summary\r\n  });\r\n","import { dispatch } from \"../store\";\r\nimport { MarkBundleDataLoadErrorAction } from \"../reducers/schema\";\r\n\r\nexport const markBundleDataLoadError = (\r\n  errorMessage: string\r\n): MarkBundleDataLoadErrorAction =>\r\n  dispatch({\r\n    type: \"MARK_BUNDLE_DATA_ERROR\",\r\n    errorMessage\r\n  });\r\n","import { MarkBundleDataInitializedAction } from \"../reducers/schema\";\r\nimport { dispatch } from \"../store\";\r\n\r\nexport const markBundleDataInitialized = (): MarkBundleDataInitializedAction =>\r\n  dispatch({\r\n    type: \"MARK_BUNDLE_DATA_INITIALIZED\"\r\n  });\r\n","import { SetQueryErrorAction } from \"../reducers/schema\";\r\nimport { dispatch } from \"../store\";\r\nimport { Query } from \"../utils/Query\";\r\n\r\nexport const setQueryError = (\r\n  forQuery: Query,\r\n  errorMessage: string\r\n): SetQueryErrorAction =>\r\n  dispatch({\r\n    type: \"SET_QUERY_ERROR\",\r\n    forQuery,\r\n    errorMessage\r\n  });\r\n","import { SetBundleDataMultipleSourcesAction } from \"../reducers/schema\";\r\nimport { dispatch } from \"../store\";\r\n\r\nexport const setBundleMultipleSources = (\r\n  prBundleUrl: string,\r\n  baselineBundleUrl: string\r\n): SetBundleDataMultipleSourcesAction =>\r\n  dispatch({\r\n    type: \"SET_BUNDLE_DATA_MULTIPLE_SOURCES\",\r\n    baselineBundleUrl,\r\n    prBundleUrl\r\n  });\r\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"371af5a781b3b122f783.worker.js\");\n};"],"sourceRoot":""}